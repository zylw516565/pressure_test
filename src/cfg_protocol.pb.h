// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cfg_protocol.proto

#ifndef PROTOBUF_cfg_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_cfg_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace dyncfg {
namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_cfg_5fprotocol_2eproto();
void protobuf_AssignDesc_cfg_5fprotocol_2eproto();
void protobuf_ShutdownFile_cfg_5fprotocol_2eproto();

class upBoolItem;
class upUInt32Item;
class upUInt64Item;
class upFloatItem;
class upDoubleItem;
class upStringItem;
class upBytesItem;
class upDynamicData;
class DynDataUploadReq;
class DynDataUploadRsp;
class NAD_FrameInfo;
class NAD_SignalInfo;
class DBCdictInfoReq;
class DBCdictInfoRsp;
class DBCdynInfo;
class NADUpLoadDictReq;
class NADUpLoadDictRsp;
class NADDynInfoValReq;
class NADDynInfoValRsp;

enum DYN_DATA_TYPE {
  DDT_BOOLEAN = 0,
  DDT_UINT32 = 1,
  DDT_UINT64 = 2,
  DDT_STRING = 3,
  DDT_BYTES = 4
};
bool DYN_DATA_TYPE_IsValid(int value);
const DYN_DATA_TYPE DYN_DATA_TYPE_MIN = DDT_BOOLEAN;
const DYN_DATA_TYPE DYN_DATA_TYPE_MAX = DDT_BYTES;
const int DYN_DATA_TYPE_ARRAYSIZE = DYN_DATA_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* DYN_DATA_TYPE_descriptor();
inline const ::std::string& DYN_DATA_TYPE_Name(DYN_DATA_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    DYN_DATA_TYPE_descriptor(), value);
}
inline bool DYN_DATA_TYPE_Parse(
    const ::std::string& name, DYN_DATA_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DYN_DATA_TYPE>(
    DYN_DATA_TYPE_descriptor(), name, value);
}
enum DYN_ULOAD_ENUM_TYPE {
  ULD_ENUM_START_UP = 0,
  ULD_ENUM_USE_NEW_VER = 1,
  ULD_ENUM_ANY_ERR = 2,
  ULD_ENUM_ERR_CNT = 3,
  ULD_ENUM_ERR_CONFIG = 4
};
bool DYN_ULOAD_ENUM_TYPE_IsValid(int value);
const DYN_ULOAD_ENUM_TYPE DYN_ULOAD_ENUM_TYPE_MIN = ULD_ENUM_START_UP;
const DYN_ULOAD_ENUM_TYPE DYN_ULOAD_ENUM_TYPE_MAX = ULD_ENUM_ERR_CONFIG;
const int DYN_ULOAD_ENUM_TYPE_ARRAYSIZE = DYN_ULOAD_ENUM_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* DYN_ULOAD_ENUM_TYPE_descriptor();
inline const ::std::string& DYN_ULOAD_ENUM_TYPE_Name(DYN_ULOAD_ENUM_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    DYN_ULOAD_ENUM_TYPE_descriptor(), value);
}
inline bool DYN_ULOAD_ENUM_TYPE_Parse(
    const ::std::string& name, DYN_ULOAD_ENUM_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DYN_ULOAD_ENUM_TYPE>(
    DYN_ULOAD_ENUM_TYPE_descriptor(), name, value);
}
// ===================================================================

class upBoolItem : public ::google::protobuf::Message {
 public:
  upBoolItem();
  virtual ~upBoolItem();

  upBoolItem(const upBoolItem& from);

  inline upBoolItem& operator=(const upBoolItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const upBoolItem& default_instance();

  void Swap(upBoolItem* other);

  // implements Message ----------------------------------------------

  upBoolItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const upBoolItem& from);
  void MergeFrom(const upBoolItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 data_sn = 1;
  inline bool has_data_sn() const;
  inline void clear_data_sn();
  static const int kDataSnFieldNumber = 1;
  inline ::google::protobuf::uint32 data_sn() const;
  inline void set_data_sn(::google::protobuf::uint32 value);

  // required bool data_bool_value = 2;
  inline bool has_data_bool_value() const;
  inline void clear_data_bool_value();
  static const int kDataBoolValueFieldNumber = 2;
  inline bool data_bool_value() const;
  inline void set_data_bool_value(bool value);

  // @@protoc_insertion_point(class_scope:dyncfg.pb.upBoolItem)
 private:
  inline void set_has_data_sn();
  inline void clear_has_data_sn();
  inline void set_has_data_bool_value();
  inline void clear_has_data_bool_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 data_sn_;
  bool data_bool_value_;
  friend void  protobuf_AddDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_cfg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static upBoolItem* default_instance_;
};
// -------------------------------------------------------------------

class upUInt32Item : public ::google::protobuf::Message {
 public:
  upUInt32Item();
  virtual ~upUInt32Item();

  upUInt32Item(const upUInt32Item& from);

  inline upUInt32Item& operator=(const upUInt32Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const upUInt32Item& default_instance();

  void Swap(upUInt32Item* other);

  // implements Message ----------------------------------------------

  upUInt32Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const upUInt32Item& from);
  void MergeFrom(const upUInt32Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 data_sn = 1;
  inline bool has_data_sn() const;
  inline void clear_data_sn();
  static const int kDataSnFieldNumber = 1;
  inline ::google::protobuf::uint32 data_sn() const;
  inline void set_data_sn(::google::protobuf::uint32 value);

  // required uint32 data_u32_value = 2;
  inline bool has_data_u32_value() const;
  inline void clear_data_u32_value();
  static const int kDataU32ValueFieldNumber = 2;
  inline ::google::protobuf::uint32 data_u32_value() const;
  inline void set_data_u32_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dyncfg.pb.upUInt32Item)
 private:
  inline void set_has_data_sn();
  inline void clear_has_data_sn();
  inline void set_has_data_u32_value();
  inline void clear_has_data_u32_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 data_sn_;
  ::google::protobuf::uint32 data_u32_value_;
  friend void  protobuf_AddDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_cfg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static upUInt32Item* default_instance_;
};
// -------------------------------------------------------------------

class upUInt64Item : public ::google::protobuf::Message {
 public:
  upUInt64Item();
  virtual ~upUInt64Item();

  upUInt64Item(const upUInt64Item& from);

  inline upUInt64Item& operator=(const upUInt64Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const upUInt64Item& default_instance();

  void Swap(upUInt64Item* other);

  // implements Message ----------------------------------------------

  upUInt64Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const upUInt64Item& from);
  void MergeFrom(const upUInt64Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 data_sn = 1;
  inline bool has_data_sn() const;
  inline void clear_data_sn();
  static const int kDataSnFieldNumber = 1;
  inline ::google::protobuf::uint32 data_sn() const;
  inline void set_data_sn(::google::protobuf::uint32 value);

  // required uint64 data_u64_value = 2;
  inline bool has_data_u64_value() const;
  inline void clear_data_u64_value();
  static const int kDataU64ValueFieldNumber = 2;
  inline ::google::protobuf::uint64 data_u64_value() const;
  inline void set_data_u64_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:dyncfg.pb.upUInt64Item)
 private:
  inline void set_has_data_sn();
  inline void clear_has_data_sn();
  inline void set_has_data_u64_value();
  inline void clear_has_data_u64_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 data_u64_value_;
  ::google::protobuf::uint32 data_sn_;
  friend void  protobuf_AddDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_cfg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static upUInt64Item* default_instance_;
};
// -------------------------------------------------------------------

class upFloatItem : public ::google::protobuf::Message {
 public:
  upFloatItem();
  virtual ~upFloatItem();

  upFloatItem(const upFloatItem& from);

  inline upFloatItem& operator=(const upFloatItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const upFloatItem& default_instance();

  void Swap(upFloatItem* other);

  // implements Message ----------------------------------------------

  upFloatItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const upFloatItem& from);
  void MergeFrom(const upFloatItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 data_sn = 1;
  inline bool has_data_sn() const;
  inline void clear_data_sn();
  static const int kDataSnFieldNumber = 1;
  inline ::google::protobuf::uint32 data_sn() const;
  inline void set_data_sn(::google::protobuf::uint32 value);

  // required float data_f_value = 2;
  inline bool has_data_f_value() const;
  inline void clear_data_f_value();
  static const int kDataFValueFieldNumber = 2;
  inline float data_f_value() const;
  inline void set_data_f_value(float value);

  // @@protoc_insertion_point(class_scope:dyncfg.pb.upFloatItem)
 private:
  inline void set_has_data_sn();
  inline void clear_has_data_sn();
  inline void set_has_data_f_value();
  inline void clear_has_data_f_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 data_sn_;
  float data_f_value_;
  friend void  protobuf_AddDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_cfg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static upFloatItem* default_instance_;
};
// -------------------------------------------------------------------

class upDoubleItem : public ::google::protobuf::Message {
 public:
  upDoubleItem();
  virtual ~upDoubleItem();

  upDoubleItem(const upDoubleItem& from);

  inline upDoubleItem& operator=(const upDoubleItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const upDoubleItem& default_instance();

  void Swap(upDoubleItem* other);

  // implements Message ----------------------------------------------

  upDoubleItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const upDoubleItem& from);
  void MergeFrom(const upDoubleItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 data_sn = 1;
  inline bool has_data_sn() const;
  inline void clear_data_sn();
  static const int kDataSnFieldNumber = 1;
  inline ::google::protobuf::uint32 data_sn() const;
  inline void set_data_sn(::google::protobuf::uint32 value);

  // required double data_d_value = 2;
  inline bool has_data_d_value() const;
  inline void clear_data_d_value();
  static const int kDataDValueFieldNumber = 2;
  inline double data_d_value() const;
  inline void set_data_d_value(double value);

  // @@protoc_insertion_point(class_scope:dyncfg.pb.upDoubleItem)
 private:
  inline void set_has_data_sn();
  inline void clear_has_data_sn();
  inline void set_has_data_d_value();
  inline void clear_has_data_d_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double data_d_value_;
  ::google::protobuf::uint32 data_sn_;
  friend void  protobuf_AddDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_cfg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static upDoubleItem* default_instance_;
};
// -------------------------------------------------------------------

class upStringItem : public ::google::protobuf::Message {
 public:
  upStringItem();
  virtual ~upStringItem();

  upStringItem(const upStringItem& from);

  inline upStringItem& operator=(const upStringItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const upStringItem& default_instance();

  void Swap(upStringItem* other);

  // implements Message ----------------------------------------------

  upStringItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const upStringItem& from);
  void MergeFrom(const upStringItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 data_sn = 1;
  inline bool has_data_sn() const;
  inline void clear_data_sn();
  static const int kDataSnFieldNumber = 1;
  inline ::google::protobuf::uint32 data_sn() const;
  inline void set_data_sn(::google::protobuf::uint32 value);

  // required string data_str_value = 2;
  inline bool has_data_str_value() const;
  inline void clear_data_str_value();
  static const int kDataStrValueFieldNumber = 2;
  inline const ::std::string& data_str_value() const;
  inline void set_data_str_value(const ::std::string& value);
  inline void set_data_str_value(const char* value);
  inline void set_data_str_value(const char* value, size_t size);
  inline ::std::string* mutable_data_str_value();
  inline ::std::string* release_data_str_value();
  inline void set_allocated_data_str_value(::std::string* data_str_value);

  // @@protoc_insertion_point(class_scope:dyncfg.pb.upStringItem)
 private:
  inline void set_has_data_sn();
  inline void clear_has_data_sn();
  inline void set_has_data_str_value();
  inline void clear_has_data_str_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_str_value_;
  ::google::protobuf::uint32 data_sn_;
  friend void  protobuf_AddDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_cfg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static upStringItem* default_instance_;
};
// -------------------------------------------------------------------

class upBytesItem : public ::google::protobuf::Message {
 public:
  upBytesItem();
  virtual ~upBytesItem();

  upBytesItem(const upBytesItem& from);

  inline upBytesItem& operator=(const upBytesItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const upBytesItem& default_instance();

  void Swap(upBytesItem* other);

  // implements Message ----------------------------------------------

  upBytesItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const upBytesItem& from);
  void MergeFrom(const upBytesItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 data_sn = 1;
  inline bool has_data_sn() const;
  inline void clear_data_sn();
  static const int kDataSnFieldNumber = 1;
  inline ::google::protobuf::uint32 data_sn() const;
  inline void set_data_sn(::google::protobuf::uint32 value);

  // required bytes data_bytes_value = 2;
  inline bool has_data_bytes_value() const;
  inline void clear_data_bytes_value();
  static const int kDataBytesValueFieldNumber = 2;
  inline const ::std::string& data_bytes_value() const;
  inline void set_data_bytes_value(const ::std::string& value);
  inline void set_data_bytes_value(const char* value);
  inline void set_data_bytes_value(const void* value, size_t size);
  inline ::std::string* mutable_data_bytes_value();
  inline ::std::string* release_data_bytes_value();
  inline void set_allocated_data_bytes_value(::std::string* data_bytes_value);

  // @@protoc_insertion_point(class_scope:dyncfg.pb.upBytesItem)
 private:
  inline void set_has_data_sn();
  inline void clear_has_data_sn();
  inline void set_has_data_bytes_value();
  inline void clear_has_data_bytes_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_bytes_value_;
  ::google::protobuf::uint32 data_sn_;
  friend void  protobuf_AddDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_cfg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static upBytesItem* default_instance_;
};
// -------------------------------------------------------------------

class upDynamicData : public ::google::protobuf::Message {
 public:
  upDynamicData();
  virtual ~upDynamicData();

  upDynamicData(const upDynamicData& from);

  inline upDynamicData& operator=(const upDynamicData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const upDynamicData& default_instance();

  void Swap(upDynamicData* other);

  // implements Message ----------------------------------------------

  upDynamicData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const upDynamicData& from);
  void MergeFrom(const upDynamicData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 collect_time = 1;
  inline bool has_collect_time() const;
  inline void clear_collect_time();
  static const int kCollectTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 collect_time() const;
  inline void set_collect_time(::google::protobuf::uint32 value);

  // repeated .dyncfg.pb.upBoolItem data_bool_arr = 2;
  inline int data_bool_arr_size() const;
  inline void clear_data_bool_arr();
  static const int kDataBoolArrFieldNumber = 2;
  inline const ::dyncfg::pb::upBoolItem& data_bool_arr(int index) const;
  inline ::dyncfg::pb::upBoolItem* mutable_data_bool_arr(int index);
  inline ::dyncfg::pb::upBoolItem* add_data_bool_arr();
  inline const ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upBoolItem >&
      data_bool_arr() const;
  inline ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upBoolItem >*
      mutable_data_bool_arr();

  // repeated .dyncfg.pb.upUInt32Item data_u32_arr = 3;
  inline int data_u32_arr_size() const;
  inline void clear_data_u32_arr();
  static const int kDataU32ArrFieldNumber = 3;
  inline const ::dyncfg::pb::upUInt32Item& data_u32_arr(int index) const;
  inline ::dyncfg::pb::upUInt32Item* mutable_data_u32_arr(int index);
  inline ::dyncfg::pb::upUInt32Item* add_data_u32_arr();
  inline const ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upUInt32Item >&
      data_u32_arr() const;
  inline ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upUInt32Item >*
      mutable_data_u32_arr();

  // repeated .dyncfg.pb.upUInt64Item data_u64_arr = 4;
  inline int data_u64_arr_size() const;
  inline void clear_data_u64_arr();
  static const int kDataU64ArrFieldNumber = 4;
  inline const ::dyncfg::pb::upUInt64Item& data_u64_arr(int index) const;
  inline ::dyncfg::pb::upUInt64Item* mutable_data_u64_arr(int index);
  inline ::dyncfg::pb::upUInt64Item* add_data_u64_arr();
  inline const ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upUInt64Item >&
      data_u64_arr() const;
  inline ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upUInt64Item >*
      mutable_data_u64_arr();

  // repeated .dyncfg.pb.upStringItem data_str_arr = 5;
  inline int data_str_arr_size() const;
  inline void clear_data_str_arr();
  static const int kDataStrArrFieldNumber = 5;
  inline const ::dyncfg::pb::upStringItem& data_str_arr(int index) const;
  inline ::dyncfg::pb::upStringItem* mutable_data_str_arr(int index);
  inline ::dyncfg::pb::upStringItem* add_data_str_arr();
  inline const ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upStringItem >&
      data_str_arr() const;
  inline ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upStringItem >*
      mutable_data_str_arr();

  // repeated .dyncfg.pb.upBytesItem data_bytes_arr = 6;
  inline int data_bytes_arr_size() const;
  inline void clear_data_bytes_arr();
  static const int kDataBytesArrFieldNumber = 6;
  inline const ::dyncfg::pb::upBytesItem& data_bytes_arr(int index) const;
  inline ::dyncfg::pb::upBytesItem* mutable_data_bytes_arr(int index);
  inline ::dyncfg::pb::upBytesItem* add_data_bytes_arr();
  inline const ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upBytesItem >&
      data_bytes_arr() const;
  inline ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upBytesItem >*
      mutable_data_bytes_arr();

  // @@protoc_insertion_point(class_scope:dyncfg.pb.upDynamicData)
 private:
  inline void set_has_collect_time();
  inline void clear_has_collect_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upBoolItem > data_bool_arr_;
  ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upUInt32Item > data_u32_arr_;
  ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upUInt64Item > data_u64_arr_;
  ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upStringItem > data_str_arr_;
  ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upBytesItem > data_bytes_arr_;
  ::google::protobuf::uint32 collect_time_;
  friend void  protobuf_AddDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_cfg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static upDynamicData* default_instance_;
};
// -------------------------------------------------------------------

class DynDataUploadReq : public ::google::protobuf::Message {
 public:
  DynDataUploadReq();
  virtual ~DynDataUploadReq();

  DynDataUploadReq(const DynDataUploadReq& from);

  inline DynDataUploadReq& operator=(const DynDataUploadReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DynDataUploadReq& default_instance();

  void Swap(DynDataUploadReq* other);

  // implements Message ----------------------------------------------

  DynDataUploadReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DynDataUploadReq& from);
  void MergeFrom(const DynDataUploadReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .dyncfg.pb.upDynamicData dynamic_data = 2;
  inline bool has_dynamic_data() const;
  inline void clear_dynamic_data();
  static const int kDynamicDataFieldNumber = 2;
  inline const ::dyncfg::pb::upDynamicData& dynamic_data() const;
  inline ::dyncfg::pb::upDynamicData* mutable_dynamic_data();
  inline ::dyncfg::pb::upDynamicData* release_dynamic_data();
  inline void set_allocated_dynamic_data(::dyncfg::pb::upDynamicData* dynamic_data);

  // @@protoc_insertion_point(class_scope:dyncfg.pb.DynDataUploadReq)
 private:
  inline void set_has_dynamic_data();
  inline void clear_has_dynamic_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::dyncfg::pb::upDynamicData* dynamic_data_;
  friend void  protobuf_AddDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_cfg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static DynDataUploadReq* default_instance_;
};
// -------------------------------------------------------------------

class DynDataUploadRsp : public ::google::protobuf::Message {
 public:
  DynDataUploadRsp();
  virtual ~DynDataUploadRsp();

  DynDataUploadRsp(const DynDataUploadRsp& from);

  inline DynDataUploadRsp& operator=(const DynDataUploadRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DynDataUploadRsp& default_instance();

  void Swap(DynDataUploadRsp* other);

  // implements Message ----------------------------------------------

  DynDataUploadRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DynDataUploadRsp& from);
  void MergeFrom(const DynDataUploadRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);

  // required uint32 time_stamp = 2;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 2;
  inline ::google::protobuf::uint32 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dyncfg.pb.DynDataUploadRsp)
 private:
  inline void set_has_errcode();
  inline void clear_has_errcode();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 time_stamp_;
  friend void  protobuf_AddDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_cfg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static DynDataUploadRsp* default_instance_;
};
// -------------------------------------------------------------------

class NAD_FrameInfo : public ::google::protobuf::Message {
 public:
  NAD_FrameInfo();
  virtual ~NAD_FrameInfo();

  NAD_FrameInfo(const NAD_FrameInfo& from);

  inline NAD_FrameInfo& operator=(const NAD_FrameInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NAD_FrameInfo& default_instance();

  void Swap(NAD_FrameInfo* other);

  // implements Message ----------------------------------------------

  NAD_FrameInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NAD_FrameInfo& from);
  void MergeFrom(const NAD_FrameInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 frame_sn = 1;
  inline bool has_frame_sn() const;
  inline void clear_frame_sn();
  static const int kFrameSnFieldNumber = 1;
  inline ::google::protobuf::uint32 frame_sn() const;
  inline void set_frame_sn(::google::protobuf::uint32 value);

  // required uint32 frame_id = 2;
  inline bool has_frame_id() const;
  inline void clear_frame_id();
  static const int kFrameIdFieldNumber = 2;
  inline ::google::protobuf::uint32 frame_id() const;
  inline void set_frame_id(::google::protobuf::uint32 value);

  // required uint32 frame_type = 3;
  inline bool has_frame_type() const;
  inline void clear_frame_type();
  static const int kFrameTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 frame_type() const;
  inline void set_frame_type(::google::protobuf::uint32 value);

  // required uint32 dlc = 4;
  inline bool has_dlc() const;
  inline void clear_dlc();
  static const int kDlcFieldNumber = 4;
  inline ::google::protobuf::uint32 dlc() const;
  inline void set_dlc(::google::protobuf::uint32 value);

  // required uint32 is_eid = 5;
  inline bool has_is_eid() const;
  inline void clear_is_eid();
  static const int kIsEidFieldNumber = 5;
  inline ::google::protobuf::uint32 is_eid() const;
  inline void set_is_eid(::google::protobuf::uint32 value);

  // optional uint32 signal_num = 6;
  inline bool has_signal_num() const;
  inline void clear_signal_num();
  static const int kSignalNumFieldNumber = 6;
  inline ::google::protobuf::uint32 signal_num() const;
  inline void set_signal_num(::google::protobuf::uint32 value);

  // repeated .dyncfg.pb.NAD_SignalInfo signals = 7;
  inline int signals_size() const;
  inline void clear_signals();
  static const int kSignalsFieldNumber = 7;
  inline const ::dyncfg::pb::NAD_SignalInfo& signals(int index) const;
  inline ::dyncfg::pb::NAD_SignalInfo* mutable_signals(int index);
  inline ::dyncfg::pb::NAD_SignalInfo* add_signals();
  inline const ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::NAD_SignalInfo >&
      signals() const;
  inline ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::NAD_SignalInfo >*
      mutable_signals();

  // @@protoc_insertion_point(class_scope:dyncfg.pb.NAD_FrameInfo)
 private:
  inline void set_has_frame_sn();
  inline void clear_has_frame_sn();
  inline void set_has_frame_id();
  inline void clear_has_frame_id();
  inline void set_has_frame_type();
  inline void clear_has_frame_type();
  inline void set_has_dlc();
  inline void clear_has_dlc();
  inline void set_has_is_eid();
  inline void clear_has_is_eid();
  inline void set_has_signal_num();
  inline void clear_has_signal_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 frame_sn_;
  ::google::protobuf::uint32 frame_id_;
  ::google::protobuf::uint32 frame_type_;
  ::google::protobuf::uint32 dlc_;
  ::google::protobuf::uint32 is_eid_;
  ::google::protobuf::uint32 signal_num_;
  ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::NAD_SignalInfo > signals_;
  friend void  protobuf_AddDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_cfg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static NAD_FrameInfo* default_instance_;
};
// -------------------------------------------------------------------

class NAD_SignalInfo : public ::google::protobuf::Message {
 public:
  NAD_SignalInfo();
  virtual ~NAD_SignalInfo();

  NAD_SignalInfo(const NAD_SignalInfo& from);

  inline NAD_SignalInfo& operator=(const NAD_SignalInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NAD_SignalInfo& default_instance();

  void Swap(NAD_SignalInfo* other);

  // implements Message ----------------------------------------------

  NAD_SignalInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NAD_SignalInfo& from);
  void MergeFrom(const NAD_SignalInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 data_sn = 1;
  inline bool has_data_sn() const;
  inline void clear_data_sn();
  static const int kDataSnFieldNumber = 1;
  inline ::google::protobuf::uint32 data_sn() const;
  inline void set_data_sn(::google::protobuf::uint32 value);

  // required .dyncfg.pb.DYN_DATA_TYPE data_type = 2;
  inline bool has_data_type() const;
  inline void clear_data_type();
  static const int kDataTypeFieldNumber = 2;
  inline ::dyncfg::pb::DYN_DATA_TYPE data_type() const;
  inline void set_data_type(::dyncfg::pb::DYN_DATA_TYPE value);

  // required string sin_Name = 3;
  inline bool has_sin_name() const;
  inline void clear_sin_name();
  static const int kSinNameFieldNumber = 3;
  inline const ::std::string& sin_name() const;
  inline void set_sin_name(const ::std::string& value);
  inline void set_sin_name(const char* value);
  inline void set_sin_name(const char* value, size_t size);
  inline ::std::string* mutable_sin_name();
  inline ::std::string* release_sin_name();
  inline void set_allocated_sin_name(::std::string* sin_name);

  // optional uint32 sin_Sn = 4;
  inline bool has_sin_sn() const;
  inline void clear_sin_sn();
  static const int kSinSnFieldNumber = 4;
  inline ::google::protobuf::uint32 sin_sn() const;
  inline void set_sin_sn(::google::protobuf::uint32 value);

  // required uint32 startBit = 5;
  inline bool has_startbit() const;
  inline void clear_startbit();
  static const int kStartBitFieldNumber = 5;
  inline ::google::protobuf::uint32 startbit() const;
  inline void set_startbit(::google::protobuf::uint32 value);

  // required uint32 bitSize = 6;
  inline bool has_bitsize() const;
  inline void clear_bitsize();
  static const int kBitSizeFieldNumber = 6;
  inline ::google::protobuf::uint32 bitsize() const;
  inline void set_bitsize(::google::protobuf::uint32 value);

  // required uint32 endian = 7;
  inline bool has_endian() const;
  inline void clear_endian();
  static const int kEndianFieldNumber = 7;
  inline ::google::protobuf::uint32 endian() const;
  inline void set_endian(::google::protobuf::uint32 value);

  // optional uint32 upload_mode = 8;
  inline bool has_upload_mode() const;
  inline void clear_upload_mode();
  static const int kUploadModeFieldNumber = 8;
  inline ::google::protobuf::uint32 upload_mode() const;
  inline void set_upload_mode(::google::protobuf::uint32 value);

  // required uint32 frequency = 9;
  inline bool has_frequency() const;
  inline void clear_frequency();
  static const int kFrequencyFieldNumber = 9;
  inline ::google::protobuf::uint32 frequency() const;
  inline void set_frequency(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dyncfg.pb.NAD_SignalInfo)
 private:
  inline void set_has_data_sn();
  inline void clear_has_data_sn();
  inline void set_has_data_type();
  inline void clear_has_data_type();
  inline void set_has_sin_name();
  inline void clear_has_sin_name();
  inline void set_has_sin_sn();
  inline void clear_has_sin_sn();
  inline void set_has_startbit();
  inline void clear_has_startbit();
  inline void set_has_bitsize();
  inline void clear_has_bitsize();
  inline void set_has_endian();
  inline void clear_has_endian();
  inline void set_has_upload_mode();
  inline void clear_has_upload_mode();
  inline void set_has_frequency();
  inline void clear_has_frequency();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 data_sn_;
  int data_type_;
  ::std::string* sin_name_;
  ::google::protobuf::uint32 sin_sn_;
  ::google::protobuf::uint32 startbit_;
  ::google::protobuf::uint32 bitsize_;
  ::google::protobuf::uint32 endian_;
  ::google::protobuf::uint32 upload_mode_;
  ::google::protobuf::uint32 frequency_;
  friend void  protobuf_AddDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_cfg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static NAD_SignalInfo* default_instance_;
};
// -------------------------------------------------------------------

class DBCdictInfoReq : public ::google::protobuf::Message {
 public:
  DBCdictInfoReq();
  virtual ~DBCdictInfoReq();

  DBCdictInfoReq(const DBCdictInfoReq& from);

  inline DBCdictInfoReq& operator=(const DBCdictInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBCdictInfoReq& default_instance();

  void Swap(DBCdictInfoReq* other);

  // implements Message ----------------------------------------------

  DBCdictInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBCdictInfoReq& from);
  void MergeFrom(const DBCdictInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string vehicle_type = 1;
  inline bool has_vehicle_type() const;
  inline void clear_vehicle_type();
  static const int kVehicleTypeFieldNumber = 1;
  inline const ::std::string& vehicle_type() const;
  inline void set_vehicle_type(const ::std::string& value);
  inline void set_vehicle_type(const char* value);
  inline void set_vehicle_type(const char* value, size_t size);
  inline ::std::string* mutable_vehicle_type();
  inline ::std::string* release_vehicle_type();
  inline void set_allocated_vehicle_type(::std::string* vehicle_type);

  // required string filepath = 2;
  inline bool has_filepath() const;
  inline void clear_filepath();
  static const int kFilepathFieldNumber = 2;
  inline const ::std::string& filepath() const;
  inline void set_filepath(const ::std::string& value);
  inline void set_filepath(const char* value);
  inline void set_filepath(const char* value, size_t size);
  inline ::std::string* mutable_filepath();
  inline ::std::string* release_filepath();
  inline void set_allocated_filepath(::std::string* filepath);

  // required string version = 3;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 3;
  inline const ::std::string& version() const;
  inline void set_version(const ::std::string& value);
  inline void set_version(const char* value);
  inline void set_version(const char* value, size_t size);
  inline ::std::string* mutable_version();
  inline ::std::string* release_version();
  inline void set_allocated_version(::std::string* version);

  // required uint32 filesize = 4;
  inline bool has_filesize() const;
  inline void clear_filesize();
  static const int kFilesizeFieldNumber = 4;
  inline ::google::protobuf::uint32 filesize() const;
  inline void set_filesize(::google::protobuf::uint32 value);

  // required bytes sha256 = 5;
  inline bool has_sha256() const;
  inline void clear_sha256();
  static const int kSha256FieldNumber = 5;
  inline const ::std::string& sha256() const;
  inline void set_sha256(const ::std::string& value);
  inline void set_sha256(const char* value);
  inline void set_sha256(const void* value, size_t size);
  inline ::std::string* mutable_sha256();
  inline ::std::string* release_sha256();
  inline void set_allocated_sha256(::std::string* sha256);

  // @@protoc_insertion_point(class_scope:dyncfg.pb.DBCdictInfoReq)
 private:
  inline void set_has_vehicle_type();
  inline void clear_has_vehicle_type();
  inline void set_has_filepath();
  inline void clear_has_filepath();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_filesize();
  inline void clear_has_filesize();
  inline void set_has_sha256();
  inline void clear_has_sha256();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* vehicle_type_;
  ::std::string* filepath_;
  ::std::string* version_;
  ::std::string* sha256_;
  ::google::protobuf::uint32 filesize_;
  friend void  protobuf_AddDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_cfg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static DBCdictInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class DBCdictInfoRsp : public ::google::protobuf::Message {
 public:
  DBCdictInfoRsp();
  virtual ~DBCdictInfoRsp();

  DBCdictInfoRsp(const DBCdictInfoRsp& from);

  inline DBCdictInfoRsp& operator=(const DBCdictInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBCdictInfoRsp& default_instance();

  void Swap(DBCdictInfoRsp* other);

  // implements Message ----------------------------------------------

  DBCdictInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBCdictInfoRsp& from);
  void MergeFrom(const DBCdictInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);

  // required uint32 time_stamp = 2;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 2;
  inline ::google::protobuf::uint32 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint32 value);

  // required uint32 curDictVersion = 3;
  inline bool has_curdictversion() const;
  inline void clear_curdictversion();
  static const int kCurDictVersionFieldNumber = 3;
  inline ::google::protobuf::uint32 curdictversion() const;
  inline void set_curdictversion(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dyncfg.pb.DBCdictInfoRsp)
 private:
  inline void set_has_errcode();
  inline void clear_has_errcode();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();
  inline void set_has_curdictversion();
  inline void clear_has_curdictversion();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 time_stamp_;
  ::google::protobuf::uint32 curdictversion_;
  friend void  protobuf_AddDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_cfg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static DBCdictInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class DBCdynInfo : public ::google::protobuf::Message {
 public:
  DBCdynInfo();
  virtual ~DBCdynInfo();

  DBCdynInfo(const DBCdynInfo& from);

  inline DBCdynInfo& operator=(const DBCdynInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBCdynInfo& default_instance();

  void Swap(DBCdynInfo* other);

  // implements Message ----------------------------------------------

  DBCdynInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBCdynInfo& from);
  void MergeFrom(const DBCdynInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline const ::std::string& version() const;
  inline void set_version(const ::std::string& value);
  inline void set_version(const char* value);
  inline void set_version(const char* value, size_t size);
  inline ::std::string* mutable_version();
  inline ::std::string* release_version();
  inline void set_allocated_version(::std::string* version);

  // required string vehicle_type = 2;
  inline bool has_vehicle_type() const;
  inline void clear_vehicle_type();
  static const int kVehicleTypeFieldNumber = 2;
  inline const ::std::string& vehicle_type() const;
  inline void set_vehicle_type(const ::std::string& value);
  inline void set_vehicle_type(const char* value);
  inline void set_vehicle_type(const char* value, size_t size);
  inline ::std::string* mutable_vehicle_type();
  inline ::std::string* release_vehicle_type();
  inline void set_allocated_vehicle_type(::std::string* vehicle_type);

  // required uint32 frame_num = 3;
  inline bool has_frame_num() const;
  inline void clear_frame_num();
  static const int kFrameNumFieldNumber = 3;
  inline ::google::protobuf::uint32 frame_num() const;
  inline void set_frame_num(::google::protobuf::uint32 value);

  // repeated .dyncfg.pb.NAD_FrameInfo frames = 4;
  inline int frames_size() const;
  inline void clear_frames();
  static const int kFramesFieldNumber = 4;
  inline const ::dyncfg::pb::NAD_FrameInfo& frames(int index) const;
  inline ::dyncfg::pb::NAD_FrameInfo* mutable_frames(int index);
  inline ::dyncfg::pb::NAD_FrameInfo* add_frames();
  inline const ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::NAD_FrameInfo >&
      frames() const;
  inline ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::NAD_FrameInfo >*
      mutable_frames();

  // @@protoc_insertion_point(class_scope:dyncfg.pb.DBCdynInfo)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_vehicle_type();
  inline void clear_has_vehicle_type();
  inline void set_has_frame_num();
  inline void clear_has_frame_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* version_;
  ::std::string* vehicle_type_;
  ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::NAD_FrameInfo > frames_;
  ::google::protobuf::uint32 frame_num_;
  friend void  protobuf_AddDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_cfg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static DBCdynInfo* default_instance_;
};
// -------------------------------------------------------------------

class NADUpLoadDictReq : public ::google::protobuf::Message {
 public:
  NADUpLoadDictReq();
  virtual ~NADUpLoadDictReq();

  NADUpLoadDictReq(const NADUpLoadDictReq& from);

  inline NADUpLoadDictReq& operator=(const NADUpLoadDictReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NADUpLoadDictReq& default_instance();

  void Swap(NADUpLoadDictReq* other);

  // implements Message ----------------------------------------------

  NADUpLoadDictReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NADUpLoadDictReq& from);
  void MergeFrom(const NADUpLoadDictReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .dyncfg.pb.DYN_ULOAD_ENUM_TYPE rsp_type = 1;
  inline bool has_rsp_type() const;
  inline void clear_rsp_type();
  static const int kRspTypeFieldNumber = 1;
  inline ::dyncfg::pb::DYN_ULOAD_ENUM_TYPE rsp_type() const;
  inline void set_rsp_type(::dyncfg::pb::DYN_ULOAD_ENUM_TYPE value);

  // required string version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline const ::std::string& version() const;
  inline void set_version(const ::std::string& value);
  inline void set_version(const char* value);
  inline void set_version(const char* value, size_t size);
  inline ::std::string* mutable_version();
  inline ::std::string* release_version();
  inline void set_allocated_version(::std::string* version);

  // required string vehicle_type = 3;
  inline bool has_vehicle_type() const;
  inline void clear_vehicle_type();
  static const int kVehicleTypeFieldNumber = 3;
  inline const ::std::string& vehicle_type() const;
  inline void set_vehicle_type(const ::std::string& value);
  inline void set_vehicle_type(const char* value);
  inline void set_vehicle_type(const char* value, size_t size);
  inline ::std::string* mutable_vehicle_type();
  inline ::std::string* release_vehicle_type();
  inline void set_allocated_vehicle_type(::std::string* vehicle_type);

  // required uint32 time_stamp = 4;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 4;
  inline ::google::protobuf::uint32 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint32 value);

  // required uint32 frame_num = 5;
  inline bool has_frame_num() const;
  inline void clear_frame_num();
  static const int kFrameNumFieldNumber = 5;
  inline ::google::protobuf::uint32 frame_num() const;
  inline void set_frame_num(::google::protobuf::uint32 value);

  // repeated uint32 data_sn = 6;
  inline int data_sn_size() const;
  inline void clear_data_sn();
  static const int kDataSnFieldNumber = 6;
  inline ::google::protobuf::uint32 data_sn(int index) const;
  inline void set_data_sn(int index, ::google::protobuf::uint32 value);
  inline void add_data_sn(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      data_sn() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_data_sn();

  // @@protoc_insertion_point(class_scope:dyncfg.pb.NADUpLoadDictReq)
 private:
  inline void set_has_rsp_type();
  inline void clear_has_rsp_type();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_vehicle_type();
  inline void clear_has_vehicle_type();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();
  inline void set_has_frame_num();
  inline void clear_has_frame_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* version_;
  int rsp_type_;
  ::google::protobuf::uint32 time_stamp_;
  ::std::string* vehicle_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > data_sn_;
  ::google::protobuf::uint32 frame_num_;
  friend void  protobuf_AddDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_cfg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static NADUpLoadDictReq* default_instance_;
};
// -------------------------------------------------------------------

class NADUpLoadDictRsp : public ::google::protobuf::Message {
 public:
  NADUpLoadDictRsp();
  virtual ~NADUpLoadDictRsp();

  NADUpLoadDictRsp(const NADUpLoadDictRsp& from);

  inline NADUpLoadDictRsp& operator=(const NADUpLoadDictRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NADUpLoadDictRsp& default_instance();

  void Swap(NADUpLoadDictRsp* other);

  // implements Message ----------------------------------------------

  NADUpLoadDictRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NADUpLoadDictRsp& from);
  void MergeFrom(const NADUpLoadDictRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);

  // required uint32 time_stamp = 2;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 2;
  inline ::google::protobuf::uint32 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dyncfg.pb.NADUpLoadDictRsp)
 private:
  inline void set_has_errcode();
  inline void clear_has_errcode();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 time_stamp_;
  friend void  protobuf_AddDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_cfg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static NADUpLoadDictRsp* default_instance_;
};
// -------------------------------------------------------------------

class NADDynInfoValReq : public ::google::protobuf::Message {
 public:
  NADDynInfoValReq();
  virtual ~NADDynInfoValReq();

  NADDynInfoValReq(const NADDynInfoValReq& from);

  inline NADDynInfoValReq& operator=(const NADDynInfoValReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NADDynInfoValReq& default_instance();

  void Swap(NADDynInfoValReq* other);

  // implements Message ----------------------------------------------

  NADDynInfoValReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NADDynInfoValReq& from);
  void MergeFrom(const NADDynInfoValReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 frame_num = 1;
  inline bool has_frame_num() const;
  inline void clear_frame_num();
  static const int kFrameNumFieldNumber = 1;
  inline ::google::protobuf::uint32 frame_num() const;
  inline void set_frame_num(::google::protobuf::uint32 value);

  // repeated .dyncfg.pb.NAD_FrameInfo frames = 2;
  inline int frames_size() const;
  inline void clear_frames();
  static const int kFramesFieldNumber = 2;
  inline const ::dyncfg::pb::NAD_FrameInfo& frames(int index) const;
  inline ::dyncfg::pb::NAD_FrameInfo* mutable_frames(int index);
  inline ::dyncfg::pb::NAD_FrameInfo* add_frames();
  inline const ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::NAD_FrameInfo >&
      frames() const;
  inline ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::NAD_FrameInfo >*
      mutable_frames();

  // @@protoc_insertion_point(class_scope:dyncfg.pb.NADDynInfoValReq)
 private:
  inline void set_has_frame_num();
  inline void clear_has_frame_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::NAD_FrameInfo > frames_;
  ::google::protobuf::uint32 frame_num_;
  friend void  protobuf_AddDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_cfg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static NADDynInfoValReq* default_instance_;
};
// -------------------------------------------------------------------

class NADDynInfoValRsp : public ::google::protobuf::Message {
 public:
  NADDynInfoValRsp();
  virtual ~NADDynInfoValRsp();

  NADDynInfoValRsp(const NADDynInfoValRsp& from);

  inline NADDynInfoValRsp& operator=(const NADDynInfoValRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NADDynInfoValRsp& default_instance();

  void Swap(NADDynInfoValRsp* other);

  // implements Message ----------------------------------------------

  NADDynInfoValRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NADDynInfoValRsp& from);
  void MergeFrom(const NADDynInfoValRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);

  // required uint32 time_stamp = 2;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 2;
  inline ::google::protobuf::uint32 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dyncfg.pb.NADDynInfoValRsp)
 private:
  inline void set_has_errcode();
  inline void clear_has_errcode();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 time_stamp_;
  friend void  protobuf_AddDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_cfg_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_cfg_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static NADDynInfoValRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// upBoolItem

// required uint32 data_sn = 1;
inline bool upBoolItem::has_data_sn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void upBoolItem::set_has_data_sn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void upBoolItem::clear_has_data_sn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void upBoolItem::clear_data_sn() {
  data_sn_ = 0u;
  clear_has_data_sn();
}
inline ::google::protobuf::uint32 upBoolItem::data_sn() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.upBoolItem.data_sn)
  return data_sn_;
}
inline void upBoolItem::set_data_sn(::google::protobuf::uint32 value) {
  set_has_data_sn();
  data_sn_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.upBoolItem.data_sn)
}

// required bool data_bool_value = 2;
inline bool upBoolItem::has_data_bool_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void upBoolItem::set_has_data_bool_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void upBoolItem::clear_has_data_bool_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void upBoolItem::clear_data_bool_value() {
  data_bool_value_ = false;
  clear_has_data_bool_value();
}
inline bool upBoolItem::data_bool_value() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.upBoolItem.data_bool_value)
  return data_bool_value_;
}
inline void upBoolItem::set_data_bool_value(bool value) {
  set_has_data_bool_value();
  data_bool_value_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.upBoolItem.data_bool_value)
}

// -------------------------------------------------------------------

// upUInt32Item

// required uint32 data_sn = 1;
inline bool upUInt32Item::has_data_sn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void upUInt32Item::set_has_data_sn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void upUInt32Item::clear_has_data_sn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void upUInt32Item::clear_data_sn() {
  data_sn_ = 0u;
  clear_has_data_sn();
}
inline ::google::protobuf::uint32 upUInt32Item::data_sn() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.upUInt32Item.data_sn)
  return data_sn_;
}
inline void upUInt32Item::set_data_sn(::google::protobuf::uint32 value) {
  set_has_data_sn();
  data_sn_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.upUInt32Item.data_sn)
}

// required uint32 data_u32_value = 2;
inline bool upUInt32Item::has_data_u32_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void upUInt32Item::set_has_data_u32_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void upUInt32Item::clear_has_data_u32_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void upUInt32Item::clear_data_u32_value() {
  data_u32_value_ = 0u;
  clear_has_data_u32_value();
}
inline ::google::protobuf::uint32 upUInt32Item::data_u32_value() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.upUInt32Item.data_u32_value)
  return data_u32_value_;
}
inline void upUInt32Item::set_data_u32_value(::google::protobuf::uint32 value) {
  set_has_data_u32_value();
  data_u32_value_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.upUInt32Item.data_u32_value)
}

// -------------------------------------------------------------------

// upUInt64Item

// required uint32 data_sn = 1;
inline bool upUInt64Item::has_data_sn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void upUInt64Item::set_has_data_sn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void upUInt64Item::clear_has_data_sn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void upUInt64Item::clear_data_sn() {
  data_sn_ = 0u;
  clear_has_data_sn();
}
inline ::google::protobuf::uint32 upUInt64Item::data_sn() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.upUInt64Item.data_sn)
  return data_sn_;
}
inline void upUInt64Item::set_data_sn(::google::protobuf::uint32 value) {
  set_has_data_sn();
  data_sn_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.upUInt64Item.data_sn)
}

// required uint64 data_u64_value = 2;
inline bool upUInt64Item::has_data_u64_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void upUInt64Item::set_has_data_u64_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void upUInt64Item::clear_has_data_u64_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void upUInt64Item::clear_data_u64_value() {
  data_u64_value_ = GOOGLE_ULONGLONG(0);
  clear_has_data_u64_value();
}
inline ::google::protobuf::uint64 upUInt64Item::data_u64_value() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.upUInt64Item.data_u64_value)
  return data_u64_value_;
}
inline void upUInt64Item::set_data_u64_value(::google::protobuf::uint64 value) {
  set_has_data_u64_value();
  data_u64_value_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.upUInt64Item.data_u64_value)
}

// -------------------------------------------------------------------

// upFloatItem

// required uint32 data_sn = 1;
inline bool upFloatItem::has_data_sn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void upFloatItem::set_has_data_sn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void upFloatItem::clear_has_data_sn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void upFloatItem::clear_data_sn() {
  data_sn_ = 0u;
  clear_has_data_sn();
}
inline ::google::protobuf::uint32 upFloatItem::data_sn() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.upFloatItem.data_sn)
  return data_sn_;
}
inline void upFloatItem::set_data_sn(::google::protobuf::uint32 value) {
  set_has_data_sn();
  data_sn_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.upFloatItem.data_sn)
}

// required float data_f_value = 2;
inline bool upFloatItem::has_data_f_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void upFloatItem::set_has_data_f_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void upFloatItem::clear_has_data_f_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void upFloatItem::clear_data_f_value() {
  data_f_value_ = 0;
  clear_has_data_f_value();
}
inline float upFloatItem::data_f_value() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.upFloatItem.data_f_value)
  return data_f_value_;
}
inline void upFloatItem::set_data_f_value(float value) {
  set_has_data_f_value();
  data_f_value_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.upFloatItem.data_f_value)
}

// -------------------------------------------------------------------

// upDoubleItem

// required uint32 data_sn = 1;
inline bool upDoubleItem::has_data_sn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void upDoubleItem::set_has_data_sn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void upDoubleItem::clear_has_data_sn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void upDoubleItem::clear_data_sn() {
  data_sn_ = 0u;
  clear_has_data_sn();
}
inline ::google::protobuf::uint32 upDoubleItem::data_sn() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.upDoubleItem.data_sn)
  return data_sn_;
}
inline void upDoubleItem::set_data_sn(::google::protobuf::uint32 value) {
  set_has_data_sn();
  data_sn_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.upDoubleItem.data_sn)
}

// required double data_d_value = 2;
inline bool upDoubleItem::has_data_d_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void upDoubleItem::set_has_data_d_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void upDoubleItem::clear_has_data_d_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void upDoubleItem::clear_data_d_value() {
  data_d_value_ = 0;
  clear_has_data_d_value();
}
inline double upDoubleItem::data_d_value() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.upDoubleItem.data_d_value)
  return data_d_value_;
}
inline void upDoubleItem::set_data_d_value(double value) {
  set_has_data_d_value();
  data_d_value_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.upDoubleItem.data_d_value)
}

// -------------------------------------------------------------------

// upStringItem

// required uint32 data_sn = 1;
inline bool upStringItem::has_data_sn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void upStringItem::set_has_data_sn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void upStringItem::clear_has_data_sn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void upStringItem::clear_data_sn() {
  data_sn_ = 0u;
  clear_has_data_sn();
}
inline ::google::protobuf::uint32 upStringItem::data_sn() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.upStringItem.data_sn)
  return data_sn_;
}
inline void upStringItem::set_data_sn(::google::protobuf::uint32 value) {
  set_has_data_sn();
  data_sn_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.upStringItem.data_sn)
}

// required string data_str_value = 2;
inline bool upStringItem::has_data_str_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void upStringItem::set_has_data_str_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void upStringItem::clear_has_data_str_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void upStringItem::clear_data_str_value() {
  if (data_str_value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_str_value_->clear();
  }
  clear_has_data_str_value();
}
inline const ::std::string& upStringItem::data_str_value() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.upStringItem.data_str_value)
  return *data_str_value_;
}
inline void upStringItem::set_data_str_value(const ::std::string& value) {
  set_has_data_str_value();
  if (data_str_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_str_value_ = new ::std::string;
  }
  data_str_value_->assign(value);
  // @@protoc_insertion_point(field_set:dyncfg.pb.upStringItem.data_str_value)
}
inline void upStringItem::set_data_str_value(const char* value) {
  set_has_data_str_value();
  if (data_str_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_str_value_ = new ::std::string;
  }
  data_str_value_->assign(value);
  // @@protoc_insertion_point(field_set_char:dyncfg.pb.upStringItem.data_str_value)
}
inline void upStringItem::set_data_str_value(const char* value, size_t size) {
  set_has_data_str_value();
  if (data_str_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_str_value_ = new ::std::string;
  }
  data_str_value_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dyncfg.pb.upStringItem.data_str_value)
}
inline ::std::string* upStringItem::mutable_data_str_value() {
  set_has_data_str_value();
  if (data_str_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_str_value_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dyncfg.pb.upStringItem.data_str_value)
  return data_str_value_;
}
inline ::std::string* upStringItem::release_data_str_value() {
  clear_has_data_str_value();
  if (data_str_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_str_value_;
    data_str_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void upStringItem::set_allocated_data_str_value(::std::string* data_str_value) {
  if (data_str_value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_str_value_;
  }
  if (data_str_value) {
    set_has_data_str_value();
    data_str_value_ = data_str_value;
  } else {
    clear_has_data_str_value();
    data_str_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dyncfg.pb.upStringItem.data_str_value)
}

// -------------------------------------------------------------------

// upBytesItem

// required uint32 data_sn = 1;
inline bool upBytesItem::has_data_sn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void upBytesItem::set_has_data_sn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void upBytesItem::clear_has_data_sn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void upBytesItem::clear_data_sn() {
  data_sn_ = 0u;
  clear_has_data_sn();
}
inline ::google::protobuf::uint32 upBytesItem::data_sn() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.upBytesItem.data_sn)
  return data_sn_;
}
inline void upBytesItem::set_data_sn(::google::protobuf::uint32 value) {
  set_has_data_sn();
  data_sn_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.upBytesItem.data_sn)
}

// required bytes data_bytes_value = 2;
inline bool upBytesItem::has_data_bytes_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void upBytesItem::set_has_data_bytes_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void upBytesItem::clear_has_data_bytes_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void upBytesItem::clear_data_bytes_value() {
  if (data_bytes_value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_bytes_value_->clear();
  }
  clear_has_data_bytes_value();
}
inline const ::std::string& upBytesItem::data_bytes_value() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.upBytesItem.data_bytes_value)
  return *data_bytes_value_;
}
inline void upBytesItem::set_data_bytes_value(const ::std::string& value) {
  set_has_data_bytes_value();
  if (data_bytes_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_bytes_value_ = new ::std::string;
  }
  data_bytes_value_->assign(value);
  // @@protoc_insertion_point(field_set:dyncfg.pb.upBytesItem.data_bytes_value)
}
inline void upBytesItem::set_data_bytes_value(const char* value) {
  set_has_data_bytes_value();
  if (data_bytes_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_bytes_value_ = new ::std::string;
  }
  data_bytes_value_->assign(value);
  // @@protoc_insertion_point(field_set_char:dyncfg.pb.upBytesItem.data_bytes_value)
}
inline void upBytesItem::set_data_bytes_value(const void* value, size_t size) {
  set_has_data_bytes_value();
  if (data_bytes_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_bytes_value_ = new ::std::string;
  }
  data_bytes_value_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dyncfg.pb.upBytesItem.data_bytes_value)
}
inline ::std::string* upBytesItem::mutable_data_bytes_value() {
  set_has_data_bytes_value();
  if (data_bytes_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_bytes_value_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dyncfg.pb.upBytesItem.data_bytes_value)
  return data_bytes_value_;
}
inline ::std::string* upBytesItem::release_data_bytes_value() {
  clear_has_data_bytes_value();
  if (data_bytes_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_bytes_value_;
    data_bytes_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void upBytesItem::set_allocated_data_bytes_value(::std::string* data_bytes_value) {
  if (data_bytes_value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_bytes_value_;
  }
  if (data_bytes_value) {
    set_has_data_bytes_value();
    data_bytes_value_ = data_bytes_value;
  } else {
    clear_has_data_bytes_value();
    data_bytes_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dyncfg.pb.upBytesItem.data_bytes_value)
}

// -------------------------------------------------------------------

// upDynamicData

// required uint32 collect_time = 1;
inline bool upDynamicData::has_collect_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void upDynamicData::set_has_collect_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void upDynamicData::clear_has_collect_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void upDynamicData::clear_collect_time() {
  collect_time_ = 0u;
  clear_has_collect_time();
}
inline ::google::protobuf::uint32 upDynamicData::collect_time() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.upDynamicData.collect_time)
  return collect_time_;
}
inline void upDynamicData::set_collect_time(::google::protobuf::uint32 value) {
  set_has_collect_time();
  collect_time_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.upDynamicData.collect_time)
}

// repeated .dyncfg.pb.upBoolItem data_bool_arr = 2;
inline int upDynamicData::data_bool_arr_size() const {
  return data_bool_arr_.size();
}
inline void upDynamicData::clear_data_bool_arr() {
  data_bool_arr_.Clear();
}
inline const ::dyncfg::pb::upBoolItem& upDynamicData::data_bool_arr(int index) const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.upDynamicData.data_bool_arr)
  return data_bool_arr_.Get(index);
}
inline ::dyncfg::pb::upBoolItem* upDynamicData::mutable_data_bool_arr(int index) {
  // @@protoc_insertion_point(field_mutable:dyncfg.pb.upDynamicData.data_bool_arr)
  return data_bool_arr_.Mutable(index);
}
inline ::dyncfg::pb::upBoolItem* upDynamicData::add_data_bool_arr() {
  // @@protoc_insertion_point(field_add:dyncfg.pb.upDynamicData.data_bool_arr)
  return data_bool_arr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upBoolItem >&
upDynamicData::data_bool_arr() const {
  // @@protoc_insertion_point(field_list:dyncfg.pb.upDynamicData.data_bool_arr)
  return data_bool_arr_;
}
inline ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upBoolItem >*
upDynamicData::mutable_data_bool_arr() {
  // @@protoc_insertion_point(field_mutable_list:dyncfg.pb.upDynamicData.data_bool_arr)
  return &data_bool_arr_;
}

// repeated .dyncfg.pb.upUInt32Item data_u32_arr = 3;
inline int upDynamicData::data_u32_arr_size() const {
  return data_u32_arr_.size();
}
inline void upDynamicData::clear_data_u32_arr() {
  data_u32_arr_.Clear();
}
inline const ::dyncfg::pb::upUInt32Item& upDynamicData::data_u32_arr(int index) const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.upDynamicData.data_u32_arr)
  return data_u32_arr_.Get(index);
}
inline ::dyncfg::pb::upUInt32Item* upDynamicData::mutable_data_u32_arr(int index) {
  // @@protoc_insertion_point(field_mutable:dyncfg.pb.upDynamicData.data_u32_arr)
  return data_u32_arr_.Mutable(index);
}
inline ::dyncfg::pb::upUInt32Item* upDynamicData::add_data_u32_arr() {
  // @@protoc_insertion_point(field_add:dyncfg.pb.upDynamicData.data_u32_arr)
  return data_u32_arr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upUInt32Item >&
upDynamicData::data_u32_arr() const {
  // @@protoc_insertion_point(field_list:dyncfg.pb.upDynamicData.data_u32_arr)
  return data_u32_arr_;
}
inline ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upUInt32Item >*
upDynamicData::mutable_data_u32_arr() {
  // @@protoc_insertion_point(field_mutable_list:dyncfg.pb.upDynamicData.data_u32_arr)
  return &data_u32_arr_;
}

// repeated .dyncfg.pb.upUInt64Item data_u64_arr = 4;
inline int upDynamicData::data_u64_arr_size() const {
  return data_u64_arr_.size();
}
inline void upDynamicData::clear_data_u64_arr() {
  data_u64_arr_.Clear();
}
inline const ::dyncfg::pb::upUInt64Item& upDynamicData::data_u64_arr(int index) const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.upDynamicData.data_u64_arr)
  return data_u64_arr_.Get(index);
}
inline ::dyncfg::pb::upUInt64Item* upDynamicData::mutable_data_u64_arr(int index) {
  // @@protoc_insertion_point(field_mutable:dyncfg.pb.upDynamicData.data_u64_arr)
  return data_u64_arr_.Mutable(index);
}
inline ::dyncfg::pb::upUInt64Item* upDynamicData::add_data_u64_arr() {
  // @@protoc_insertion_point(field_add:dyncfg.pb.upDynamicData.data_u64_arr)
  return data_u64_arr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upUInt64Item >&
upDynamicData::data_u64_arr() const {
  // @@protoc_insertion_point(field_list:dyncfg.pb.upDynamicData.data_u64_arr)
  return data_u64_arr_;
}
inline ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upUInt64Item >*
upDynamicData::mutable_data_u64_arr() {
  // @@protoc_insertion_point(field_mutable_list:dyncfg.pb.upDynamicData.data_u64_arr)
  return &data_u64_arr_;
}

// repeated .dyncfg.pb.upStringItem data_str_arr = 5;
inline int upDynamicData::data_str_arr_size() const {
  return data_str_arr_.size();
}
inline void upDynamicData::clear_data_str_arr() {
  data_str_arr_.Clear();
}
inline const ::dyncfg::pb::upStringItem& upDynamicData::data_str_arr(int index) const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.upDynamicData.data_str_arr)
  return data_str_arr_.Get(index);
}
inline ::dyncfg::pb::upStringItem* upDynamicData::mutable_data_str_arr(int index) {
  // @@protoc_insertion_point(field_mutable:dyncfg.pb.upDynamicData.data_str_arr)
  return data_str_arr_.Mutable(index);
}
inline ::dyncfg::pb::upStringItem* upDynamicData::add_data_str_arr() {
  // @@protoc_insertion_point(field_add:dyncfg.pb.upDynamicData.data_str_arr)
  return data_str_arr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upStringItem >&
upDynamicData::data_str_arr() const {
  // @@protoc_insertion_point(field_list:dyncfg.pb.upDynamicData.data_str_arr)
  return data_str_arr_;
}
inline ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upStringItem >*
upDynamicData::mutable_data_str_arr() {
  // @@protoc_insertion_point(field_mutable_list:dyncfg.pb.upDynamicData.data_str_arr)
  return &data_str_arr_;
}

// repeated .dyncfg.pb.upBytesItem data_bytes_arr = 6;
inline int upDynamicData::data_bytes_arr_size() const {
  return data_bytes_arr_.size();
}
inline void upDynamicData::clear_data_bytes_arr() {
  data_bytes_arr_.Clear();
}
inline const ::dyncfg::pb::upBytesItem& upDynamicData::data_bytes_arr(int index) const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.upDynamicData.data_bytes_arr)
  return data_bytes_arr_.Get(index);
}
inline ::dyncfg::pb::upBytesItem* upDynamicData::mutable_data_bytes_arr(int index) {
  // @@protoc_insertion_point(field_mutable:dyncfg.pb.upDynamicData.data_bytes_arr)
  return data_bytes_arr_.Mutable(index);
}
inline ::dyncfg::pb::upBytesItem* upDynamicData::add_data_bytes_arr() {
  // @@protoc_insertion_point(field_add:dyncfg.pb.upDynamicData.data_bytes_arr)
  return data_bytes_arr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upBytesItem >&
upDynamicData::data_bytes_arr() const {
  // @@protoc_insertion_point(field_list:dyncfg.pb.upDynamicData.data_bytes_arr)
  return data_bytes_arr_;
}
inline ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::upBytesItem >*
upDynamicData::mutable_data_bytes_arr() {
  // @@protoc_insertion_point(field_mutable_list:dyncfg.pb.upDynamicData.data_bytes_arr)
  return &data_bytes_arr_;
}

// -------------------------------------------------------------------

// DynDataUploadReq

// required .dyncfg.pb.upDynamicData dynamic_data = 2;
inline bool DynDataUploadReq::has_dynamic_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DynDataUploadReq::set_has_dynamic_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DynDataUploadReq::clear_has_dynamic_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DynDataUploadReq::clear_dynamic_data() {
  if (dynamic_data_ != NULL) dynamic_data_->::dyncfg::pb::upDynamicData::Clear();
  clear_has_dynamic_data();
}
inline const ::dyncfg::pb::upDynamicData& DynDataUploadReq::dynamic_data() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.DynDataUploadReq.dynamic_data)
  return dynamic_data_ != NULL ? *dynamic_data_ : *default_instance_->dynamic_data_;
}
inline ::dyncfg::pb::upDynamicData* DynDataUploadReq::mutable_dynamic_data() {
  set_has_dynamic_data();
  if (dynamic_data_ == NULL) dynamic_data_ = new ::dyncfg::pb::upDynamicData;
  // @@protoc_insertion_point(field_mutable:dyncfg.pb.DynDataUploadReq.dynamic_data)
  return dynamic_data_;
}
inline ::dyncfg::pb::upDynamicData* DynDataUploadReq::release_dynamic_data() {
  clear_has_dynamic_data();
  ::dyncfg::pb::upDynamicData* temp = dynamic_data_;
  dynamic_data_ = NULL;
  return temp;
}
inline void DynDataUploadReq::set_allocated_dynamic_data(::dyncfg::pb::upDynamicData* dynamic_data) {
  delete dynamic_data_;
  dynamic_data_ = dynamic_data;
  if (dynamic_data) {
    set_has_dynamic_data();
  } else {
    clear_has_dynamic_data();
  }
  // @@protoc_insertion_point(field_set_allocated:dyncfg.pb.DynDataUploadReq.dynamic_data)
}

// -------------------------------------------------------------------

// DynDataUploadRsp

// required uint32 errcode = 1;
inline bool DynDataUploadRsp::has_errcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DynDataUploadRsp::set_has_errcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DynDataUploadRsp::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DynDataUploadRsp::clear_errcode() {
  errcode_ = 0u;
  clear_has_errcode();
}
inline ::google::protobuf::uint32 DynDataUploadRsp::errcode() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.DynDataUploadRsp.errcode)
  return errcode_;
}
inline void DynDataUploadRsp::set_errcode(::google::protobuf::uint32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.DynDataUploadRsp.errcode)
}

// required uint32 time_stamp = 2;
inline bool DynDataUploadRsp::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DynDataUploadRsp::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DynDataUploadRsp::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DynDataUploadRsp::clear_time_stamp() {
  time_stamp_ = 0u;
  clear_has_time_stamp();
}
inline ::google::protobuf::uint32 DynDataUploadRsp::time_stamp() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.DynDataUploadRsp.time_stamp)
  return time_stamp_;
}
inline void DynDataUploadRsp::set_time_stamp(::google::protobuf::uint32 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.DynDataUploadRsp.time_stamp)
}

// -------------------------------------------------------------------

// NAD_FrameInfo

// required uint32 frame_sn = 1;
inline bool NAD_FrameInfo::has_frame_sn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NAD_FrameInfo::set_has_frame_sn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NAD_FrameInfo::clear_has_frame_sn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NAD_FrameInfo::clear_frame_sn() {
  frame_sn_ = 0u;
  clear_has_frame_sn();
}
inline ::google::protobuf::uint32 NAD_FrameInfo::frame_sn() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NAD_FrameInfo.frame_sn)
  return frame_sn_;
}
inline void NAD_FrameInfo::set_frame_sn(::google::protobuf::uint32 value) {
  set_has_frame_sn();
  frame_sn_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NAD_FrameInfo.frame_sn)
}

// required uint32 frame_id = 2;
inline bool NAD_FrameInfo::has_frame_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NAD_FrameInfo::set_has_frame_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NAD_FrameInfo::clear_has_frame_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NAD_FrameInfo::clear_frame_id() {
  frame_id_ = 0u;
  clear_has_frame_id();
}
inline ::google::protobuf::uint32 NAD_FrameInfo::frame_id() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NAD_FrameInfo.frame_id)
  return frame_id_;
}
inline void NAD_FrameInfo::set_frame_id(::google::protobuf::uint32 value) {
  set_has_frame_id();
  frame_id_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NAD_FrameInfo.frame_id)
}

// required uint32 frame_type = 3;
inline bool NAD_FrameInfo::has_frame_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NAD_FrameInfo::set_has_frame_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NAD_FrameInfo::clear_has_frame_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NAD_FrameInfo::clear_frame_type() {
  frame_type_ = 0u;
  clear_has_frame_type();
}
inline ::google::protobuf::uint32 NAD_FrameInfo::frame_type() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NAD_FrameInfo.frame_type)
  return frame_type_;
}
inline void NAD_FrameInfo::set_frame_type(::google::protobuf::uint32 value) {
  set_has_frame_type();
  frame_type_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NAD_FrameInfo.frame_type)
}

// required uint32 dlc = 4;
inline bool NAD_FrameInfo::has_dlc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NAD_FrameInfo::set_has_dlc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NAD_FrameInfo::clear_has_dlc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NAD_FrameInfo::clear_dlc() {
  dlc_ = 0u;
  clear_has_dlc();
}
inline ::google::protobuf::uint32 NAD_FrameInfo::dlc() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NAD_FrameInfo.dlc)
  return dlc_;
}
inline void NAD_FrameInfo::set_dlc(::google::protobuf::uint32 value) {
  set_has_dlc();
  dlc_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NAD_FrameInfo.dlc)
}

// required uint32 is_eid = 5;
inline bool NAD_FrameInfo::has_is_eid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NAD_FrameInfo::set_has_is_eid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NAD_FrameInfo::clear_has_is_eid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NAD_FrameInfo::clear_is_eid() {
  is_eid_ = 0u;
  clear_has_is_eid();
}
inline ::google::protobuf::uint32 NAD_FrameInfo::is_eid() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NAD_FrameInfo.is_eid)
  return is_eid_;
}
inline void NAD_FrameInfo::set_is_eid(::google::protobuf::uint32 value) {
  set_has_is_eid();
  is_eid_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NAD_FrameInfo.is_eid)
}

// optional uint32 signal_num = 6;
inline bool NAD_FrameInfo::has_signal_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NAD_FrameInfo::set_has_signal_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NAD_FrameInfo::clear_has_signal_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NAD_FrameInfo::clear_signal_num() {
  signal_num_ = 0u;
  clear_has_signal_num();
}
inline ::google::protobuf::uint32 NAD_FrameInfo::signal_num() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NAD_FrameInfo.signal_num)
  return signal_num_;
}
inline void NAD_FrameInfo::set_signal_num(::google::protobuf::uint32 value) {
  set_has_signal_num();
  signal_num_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NAD_FrameInfo.signal_num)
}

// repeated .dyncfg.pb.NAD_SignalInfo signals = 7;
inline int NAD_FrameInfo::signals_size() const {
  return signals_.size();
}
inline void NAD_FrameInfo::clear_signals() {
  signals_.Clear();
}
inline const ::dyncfg::pb::NAD_SignalInfo& NAD_FrameInfo::signals(int index) const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NAD_FrameInfo.signals)
  return signals_.Get(index);
}
inline ::dyncfg::pb::NAD_SignalInfo* NAD_FrameInfo::mutable_signals(int index) {
  // @@protoc_insertion_point(field_mutable:dyncfg.pb.NAD_FrameInfo.signals)
  return signals_.Mutable(index);
}
inline ::dyncfg::pb::NAD_SignalInfo* NAD_FrameInfo::add_signals() {
  // @@protoc_insertion_point(field_add:dyncfg.pb.NAD_FrameInfo.signals)
  return signals_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::NAD_SignalInfo >&
NAD_FrameInfo::signals() const {
  // @@protoc_insertion_point(field_list:dyncfg.pb.NAD_FrameInfo.signals)
  return signals_;
}
inline ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::NAD_SignalInfo >*
NAD_FrameInfo::mutable_signals() {
  // @@protoc_insertion_point(field_mutable_list:dyncfg.pb.NAD_FrameInfo.signals)
  return &signals_;
}

// -------------------------------------------------------------------

// NAD_SignalInfo

// required uint32 data_sn = 1;
inline bool NAD_SignalInfo::has_data_sn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NAD_SignalInfo::set_has_data_sn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NAD_SignalInfo::clear_has_data_sn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NAD_SignalInfo::clear_data_sn() {
  data_sn_ = 0u;
  clear_has_data_sn();
}
inline ::google::protobuf::uint32 NAD_SignalInfo::data_sn() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NAD_SignalInfo.data_sn)
  return data_sn_;
}
inline void NAD_SignalInfo::set_data_sn(::google::protobuf::uint32 value) {
  set_has_data_sn();
  data_sn_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NAD_SignalInfo.data_sn)
}

// required .dyncfg.pb.DYN_DATA_TYPE data_type = 2;
inline bool NAD_SignalInfo::has_data_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NAD_SignalInfo::set_has_data_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NAD_SignalInfo::clear_has_data_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NAD_SignalInfo::clear_data_type() {
  data_type_ = 0;
  clear_has_data_type();
}
inline ::dyncfg::pb::DYN_DATA_TYPE NAD_SignalInfo::data_type() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NAD_SignalInfo.data_type)
  return static_cast< ::dyncfg::pb::DYN_DATA_TYPE >(data_type_);
}
inline void NAD_SignalInfo::set_data_type(::dyncfg::pb::DYN_DATA_TYPE value) {
  assert(::dyncfg::pb::DYN_DATA_TYPE_IsValid(value));
  set_has_data_type();
  data_type_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NAD_SignalInfo.data_type)
}

// required string sin_Name = 3;
inline bool NAD_SignalInfo::has_sin_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NAD_SignalInfo::set_has_sin_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NAD_SignalInfo::clear_has_sin_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NAD_SignalInfo::clear_sin_name() {
  if (sin_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sin_name_->clear();
  }
  clear_has_sin_name();
}
inline const ::std::string& NAD_SignalInfo::sin_name() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NAD_SignalInfo.sin_Name)
  return *sin_name_;
}
inline void NAD_SignalInfo::set_sin_name(const ::std::string& value) {
  set_has_sin_name();
  if (sin_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sin_name_ = new ::std::string;
  }
  sin_name_->assign(value);
  // @@protoc_insertion_point(field_set:dyncfg.pb.NAD_SignalInfo.sin_Name)
}
inline void NAD_SignalInfo::set_sin_name(const char* value) {
  set_has_sin_name();
  if (sin_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sin_name_ = new ::std::string;
  }
  sin_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:dyncfg.pb.NAD_SignalInfo.sin_Name)
}
inline void NAD_SignalInfo::set_sin_name(const char* value, size_t size) {
  set_has_sin_name();
  if (sin_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sin_name_ = new ::std::string;
  }
  sin_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dyncfg.pb.NAD_SignalInfo.sin_Name)
}
inline ::std::string* NAD_SignalInfo::mutable_sin_name() {
  set_has_sin_name();
  if (sin_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sin_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dyncfg.pb.NAD_SignalInfo.sin_Name)
  return sin_name_;
}
inline ::std::string* NAD_SignalInfo::release_sin_name() {
  clear_has_sin_name();
  if (sin_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sin_name_;
    sin_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NAD_SignalInfo::set_allocated_sin_name(::std::string* sin_name) {
  if (sin_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sin_name_;
  }
  if (sin_name) {
    set_has_sin_name();
    sin_name_ = sin_name;
  } else {
    clear_has_sin_name();
    sin_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dyncfg.pb.NAD_SignalInfo.sin_Name)
}

// optional uint32 sin_Sn = 4;
inline bool NAD_SignalInfo::has_sin_sn() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NAD_SignalInfo::set_has_sin_sn() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NAD_SignalInfo::clear_has_sin_sn() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NAD_SignalInfo::clear_sin_sn() {
  sin_sn_ = 0u;
  clear_has_sin_sn();
}
inline ::google::protobuf::uint32 NAD_SignalInfo::sin_sn() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NAD_SignalInfo.sin_Sn)
  return sin_sn_;
}
inline void NAD_SignalInfo::set_sin_sn(::google::protobuf::uint32 value) {
  set_has_sin_sn();
  sin_sn_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NAD_SignalInfo.sin_Sn)
}

// required uint32 startBit = 5;
inline bool NAD_SignalInfo::has_startbit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NAD_SignalInfo::set_has_startbit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NAD_SignalInfo::clear_has_startbit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NAD_SignalInfo::clear_startbit() {
  startbit_ = 0u;
  clear_has_startbit();
}
inline ::google::protobuf::uint32 NAD_SignalInfo::startbit() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NAD_SignalInfo.startBit)
  return startbit_;
}
inline void NAD_SignalInfo::set_startbit(::google::protobuf::uint32 value) {
  set_has_startbit();
  startbit_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NAD_SignalInfo.startBit)
}

// required uint32 bitSize = 6;
inline bool NAD_SignalInfo::has_bitsize() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NAD_SignalInfo::set_has_bitsize() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NAD_SignalInfo::clear_has_bitsize() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NAD_SignalInfo::clear_bitsize() {
  bitsize_ = 0u;
  clear_has_bitsize();
}
inline ::google::protobuf::uint32 NAD_SignalInfo::bitsize() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NAD_SignalInfo.bitSize)
  return bitsize_;
}
inline void NAD_SignalInfo::set_bitsize(::google::protobuf::uint32 value) {
  set_has_bitsize();
  bitsize_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NAD_SignalInfo.bitSize)
}

// required uint32 endian = 7;
inline bool NAD_SignalInfo::has_endian() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NAD_SignalInfo::set_has_endian() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NAD_SignalInfo::clear_has_endian() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NAD_SignalInfo::clear_endian() {
  endian_ = 0u;
  clear_has_endian();
}
inline ::google::protobuf::uint32 NAD_SignalInfo::endian() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NAD_SignalInfo.endian)
  return endian_;
}
inline void NAD_SignalInfo::set_endian(::google::protobuf::uint32 value) {
  set_has_endian();
  endian_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NAD_SignalInfo.endian)
}

// optional uint32 upload_mode = 8;
inline bool NAD_SignalInfo::has_upload_mode() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void NAD_SignalInfo::set_has_upload_mode() {
  _has_bits_[0] |= 0x00000080u;
}
inline void NAD_SignalInfo::clear_has_upload_mode() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void NAD_SignalInfo::clear_upload_mode() {
  upload_mode_ = 0u;
  clear_has_upload_mode();
}
inline ::google::protobuf::uint32 NAD_SignalInfo::upload_mode() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NAD_SignalInfo.upload_mode)
  return upload_mode_;
}
inline void NAD_SignalInfo::set_upload_mode(::google::protobuf::uint32 value) {
  set_has_upload_mode();
  upload_mode_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NAD_SignalInfo.upload_mode)
}

// required uint32 frequency = 9;
inline bool NAD_SignalInfo::has_frequency() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void NAD_SignalInfo::set_has_frequency() {
  _has_bits_[0] |= 0x00000100u;
}
inline void NAD_SignalInfo::clear_has_frequency() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void NAD_SignalInfo::clear_frequency() {
  frequency_ = 0u;
  clear_has_frequency();
}
inline ::google::protobuf::uint32 NAD_SignalInfo::frequency() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NAD_SignalInfo.frequency)
  return frequency_;
}
inline void NAD_SignalInfo::set_frequency(::google::protobuf::uint32 value) {
  set_has_frequency();
  frequency_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NAD_SignalInfo.frequency)
}

// -------------------------------------------------------------------

// DBCdictInfoReq

// required string vehicle_type = 1;
inline bool DBCdictInfoReq::has_vehicle_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBCdictInfoReq::set_has_vehicle_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBCdictInfoReq::clear_has_vehicle_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBCdictInfoReq::clear_vehicle_type() {
  if (vehicle_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vehicle_type_->clear();
  }
  clear_has_vehicle_type();
}
inline const ::std::string& DBCdictInfoReq::vehicle_type() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.DBCdictInfoReq.vehicle_type)
  return *vehicle_type_;
}
inline void DBCdictInfoReq::set_vehicle_type(const ::std::string& value) {
  set_has_vehicle_type();
  if (vehicle_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vehicle_type_ = new ::std::string;
  }
  vehicle_type_->assign(value);
  // @@protoc_insertion_point(field_set:dyncfg.pb.DBCdictInfoReq.vehicle_type)
}
inline void DBCdictInfoReq::set_vehicle_type(const char* value) {
  set_has_vehicle_type();
  if (vehicle_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vehicle_type_ = new ::std::string;
  }
  vehicle_type_->assign(value);
  // @@protoc_insertion_point(field_set_char:dyncfg.pb.DBCdictInfoReq.vehicle_type)
}
inline void DBCdictInfoReq::set_vehicle_type(const char* value, size_t size) {
  set_has_vehicle_type();
  if (vehicle_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vehicle_type_ = new ::std::string;
  }
  vehicle_type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dyncfg.pb.DBCdictInfoReq.vehicle_type)
}
inline ::std::string* DBCdictInfoReq::mutable_vehicle_type() {
  set_has_vehicle_type();
  if (vehicle_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vehicle_type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dyncfg.pb.DBCdictInfoReq.vehicle_type)
  return vehicle_type_;
}
inline ::std::string* DBCdictInfoReq::release_vehicle_type() {
  clear_has_vehicle_type();
  if (vehicle_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = vehicle_type_;
    vehicle_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBCdictInfoReq::set_allocated_vehicle_type(::std::string* vehicle_type) {
  if (vehicle_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete vehicle_type_;
  }
  if (vehicle_type) {
    set_has_vehicle_type();
    vehicle_type_ = vehicle_type;
  } else {
    clear_has_vehicle_type();
    vehicle_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dyncfg.pb.DBCdictInfoReq.vehicle_type)
}

// required string filepath = 2;
inline bool DBCdictInfoReq::has_filepath() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBCdictInfoReq::set_has_filepath() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBCdictInfoReq::clear_has_filepath() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBCdictInfoReq::clear_filepath() {
  if (filepath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filepath_->clear();
  }
  clear_has_filepath();
}
inline const ::std::string& DBCdictInfoReq::filepath() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.DBCdictInfoReq.filepath)
  return *filepath_;
}
inline void DBCdictInfoReq::set_filepath(const ::std::string& value) {
  set_has_filepath();
  if (filepath_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filepath_ = new ::std::string;
  }
  filepath_->assign(value);
  // @@protoc_insertion_point(field_set:dyncfg.pb.DBCdictInfoReq.filepath)
}
inline void DBCdictInfoReq::set_filepath(const char* value) {
  set_has_filepath();
  if (filepath_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filepath_ = new ::std::string;
  }
  filepath_->assign(value);
  // @@protoc_insertion_point(field_set_char:dyncfg.pb.DBCdictInfoReq.filepath)
}
inline void DBCdictInfoReq::set_filepath(const char* value, size_t size) {
  set_has_filepath();
  if (filepath_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filepath_ = new ::std::string;
  }
  filepath_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dyncfg.pb.DBCdictInfoReq.filepath)
}
inline ::std::string* DBCdictInfoReq::mutable_filepath() {
  set_has_filepath();
  if (filepath_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filepath_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dyncfg.pb.DBCdictInfoReq.filepath)
  return filepath_;
}
inline ::std::string* DBCdictInfoReq::release_filepath() {
  clear_has_filepath();
  if (filepath_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = filepath_;
    filepath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBCdictInfoReq::set_allocated_filepath(::std::string* filepath) {
  if (filepath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filepath_;
  }
  if (filepath) {
    set_has_filepath();
    filepath_ = filepath;
  } else {
    clear_has_filepath();
    filepath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dyncfg.pb.DBCdictInfoReq.filepath)
}

// required string version = 3;
inline bool DBCdictInfoReq::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBCdictInfoReq::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBCdictInfoReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBCdictInfoReq::clear_version() {
  if (version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_->clear();
  }
  clear_has_version();
}
inline const ::std::string& DBCdictInfoReq::version() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.DBCdictInfoReq.version)
  return *version_;
}
inline void DBCdictInfoReq::set_version(const ::std::string& value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(value);
  // @@protoc_insertion_point(field_set:dyncfg.pb.DBCdictInfoReq.version)
}
inline void DBCdictInfoReq::set_version(const char* value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(value);
  // @@protoc_insertion_point(field_set_char:dyncfg.pb.DBCdictInfoReq.version)
}
inline void DBCdictInfoReq::set_version(const char* value, size_t size) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dyncfg.pb.DBCdictInfoReq.version)
}
inline ::std::string* DBCdictInfoReq::mutable_version() {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dyncfg.pb.DBCdictInfoReq.version)
  return version_;
}
inline ::std::string* DBCdictInfoReq::release_version() {
  clear_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = version_;
    version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBCdictInfoReq::set_allocated_version(::std::string* version) {
  if (version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete version_;
  }
  if (version) {
    set_has_version();
    version_ = version;
  } else {
    clear_has_version();
    version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dyncfg.pb.DBCdictInfoReq.version)
}

// required uint32 filesize = 4;
inline bool DBCdictInfoReq::has_filesize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBCdictInfoReq::set_has_filesize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBCdictInfoReq::clear_has_filesize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBCdictInfoReq::clear_filesize() {
  filesize_ = 0u;
  clear_has_filesize();
}
inline ::google::protobuf::uint32 DBCdictInfoReq::filesize() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.DBCdictInfoReq.filesize)
  return filesize_;
}
inline void DBCdictInfoReq::set_filesize(::google::protobuf::uint32 value) {
  set_has_filesize();
  filesize_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.DBCdictInfoReq.filesize)
}

// required bytes sha256 = 5;
inline bool DBCdictInfoReq::has_sha256() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DBCdictInfoReq::set_has_sha256() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DBCdictInfoReq::clear_has_sha256() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DBCdictInfoReq::clear_sha256() {
  if (sha256_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sha256_->clear();
  }
  clear_has_sha256();
}
inline const ::std::string& DBCdictInfoReq::sha256() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.DBCdictInfoReq.sha256)
  return *sha256_;
}
inline void DBCdictInfoReq::set_sha256(const ::std::string& value) {
  set_has_sha256();
  if (sha256_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sha256_ = new ::std::string;
  }
  sha256_->assign(value);
  // @@protoc_insertion_point(field_set:dyncfg.pb.DBCdictInfoReq.sha256)
}
inline void DBCdictInfoReq::set_sha256(const char* value) {
  set_has_sha256();
  if (sha256_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sha256_ = new ::std::string;
  }
  sha256_->assign(value);
  // @@protoc_insertion_point(field_set_char:dyncfg.pb.DBCdictInfoReq.sha256)
}
inline void DBCdictInfoReq::set_sha256(const void* value, size_t size) {
  set_has_sha256();
  if (sha256_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sha256_ = new ::std::string;
  }
  sha256_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dyncfg.pb.DBCdictInfoReq.sha256)
}
inline ::std::string* DBCdictInfoReq::mutable_sha256() {
  set_has_sha256();
  if (sha256_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sha256_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dyncfg.pb.DBCdictInfoReq.sha256)
  return sha256_;
}
inline ::std::string* DBCdictInfoReq::release_sha256() {
  clear_has_sha256();
  if (sha256_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sha256_;
    sha256_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBCdictInfoReq::set_allocated_sha256(::std::string* sha256) {
  if (sha256_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sha256_;
  }
  if (sha256) {
    set_has_sha256();
    sha256_ = sha256;
  } else {
    clear_has_sha256();
    sha256_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dyncfg.pb.DBCdictInfoReq.sha256)
}

// -------------------------------------------------------------------

// DBCdictInfoRsp

// required uint32 errcode = 1;
inline bool DBCdictInfoRsp::has_errcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBCdictInfoRsp::set_has_errcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBCdictInfoRsp::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBCdictInfoRsp::clear_errcode() {
  errcode_ = 0u;
  clear_has_errcode();
}
inline ::google::protobuf::uint32 DBCdictInfoRsp::errcode() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.DBCdictInfoRsp.errcode)
  return errcode_;
}
inline void DBCdictInfoRsp::set_errcode(::google::protobuf::uint32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.DBCdictInfoRsp.errcode)
}

// required uint32 time_stamp = 2;
inline bool DBCdictInfoRsp::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBCdictInfoRsp::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBCdictInfoRsp::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBCdictInfoRsp::clear_time_stamp() {
  time_stamp_ = 0u;
  clear_has_time_stamp();
}
inline ::google::protobuf::uint32 DBCdictInfoRsp::time_stamp() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.DBCdictInfoRsp.time_stamp)
  return time_stamp_;
}
inline void DBCdictInfoRsp::set_time_stamp(::google::protobuf::uint32 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.DBCdictInfoRsp.time_stamp)
}

// required uint32 curDictVersion = 3;
inline bool DBCdictInfoRsp::has_curdictversion() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBCdictInfoRsp::set_has_curdictversion() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBCdictInfoRsp::clear_has_curdictversion() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBCdictInfoRsp::clear_curdictversion() {
  curdictversion_ = 0u;
  clear_has_curdictversion();
}
inline ::google::protobuf::uint32 DBCdictInfoRsp::curdictversion() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.DBCdictInfoRsp.curDictVersion)
  return curdictversion_;
}
inline void DBCdictInfoRsp::set_curdictversion(::google::protobuf::uint32 value) {
  set_has_curdictversion();
  curdictversion_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.DBCdictInfoRsp.curDictVersion)
}

// -------------------------------------------------------------------

// DBCdynInfo

// required string version = 1;
inline bool DBCdynInfo::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBCdynInfo::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBCdynInfo::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBCdynInfo::clear_version() {
  if (version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_->clear();
  }
  clear_has_version();
}
inline const ::std::string& DBCdynInfo::version() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.DBCdynInfo.version)
  return *version_;
}
inline void DBCdynInfo::set_version(const ::std::string& value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(value);
  // @@protoc_insertion_point(field_set:dyncfg.pb.DBCdynInfo.version)
}
inline void DBCdynInfo::set_version(const char* value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(value);
  // @@protoc_insertion_point(field_set_char:dyncfg.pb.DBCdynInfo.version)
}
inline void DBCdynInfo::set_version(const char* value, size_t size) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dyncfg.pb.DBCdynInfo.version)
}
inline ::std::string* DBCdynInfo::mutable_version() {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dyncfg.pb.DBCdynInfo.version)
  return version_;
}
inline ::std::string* DBCdynInfo::release_version() {
  clear_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = version_;
    version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBCdynInfo::set_allocated_version(::std::string* version) {
  if (version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete version_;
  }
  if (version) {
    set_has_version();
    version_ = version;
  } else {
    clear_has_version();
    version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dyncfg.pb.DBCdynInfo.version)
}

// required string vehicle_type = 2;
inline bool DBCdynInfo::has_vehicle_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBCdynInfo::set_has_vehicle_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBCdynInfo::clear_has_vehicle_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBCdynInfo::clear_vehicle_type() {
  if (vehicle_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vehicle_type_->clear();
  }
  clear_has_vehicle_type();
}
inline const ::std::string& DBCdynInfo::vehicle_type() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.DBCdynInfo.vehicle_type)
  return *vehicle_type_;
}
inline void DBCdynInfo::set_vehicle_type(const ::std::string& value) {
  set_has_vehicle_type();
  if (vehicle_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vehicle_type_ = new ::std::string;
  }
  vehicle_type_->assign(value);
  // @@protoc_insertion_point(field_set:dyncfg.pb.DBCdynInfo.vehicle_type)
}
inline void DBCdynInfo::set_vehicle_type(const char* value) {
  set_has_vehicle_type();
  if (vehicle_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vehicle_type_ = new ::std::string;
  }
  vehicle_type_->assign(value);
  // @@protoc_insertion_point(field_set_char:dyncfg.pb.DBCdynInfo.vehicle_type)
}
inline void DBCdynInfo::set_vehicle_type(const char* value, size_t size) {
  set_has_vehicle_type();
  if (vehicle_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vehicle_type_ = new ::std::string;
  }
  vehicle_type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dyncfg.pb.DBCdynInfo.vehicle_type)
}
inline ::std::string* DBCdynInfo::mutable_vehicle_type() {
  set_has_vehicle_type();
  if (vehicle_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vehicle_type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dyncfg.pb.DBCdynInfo.vehicle_type)
  return vehicle_type_;
}
inline ::std::string* DBCdynInfo::release_vehicle_type() {
  clear_has_vehicle_type();
  if (vehicle_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = vehicle_type_;
    vehicle_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBCdynInfo::set_allocated_vehicle_type(::std::string* vehicle_type) {
  if (vehicle_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete vehicle_type_;
  }
  if (vehicle_type) {
    set_has_vehicle_type();
    vehicle_type_ = vehicle_type;
  } else {
    clear_has_vehicle_type();
    vehicle_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dyncfg.pb.DBCdynInfo.vehicle_type)
}

// required uint32 frame_num = 3;
inline bool DBCdynInfo::has_frame_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBCdynInfo::set_has_frame_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBCdynInfo::clear_has_frame_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBCdynInfo::clear_frame_num() {
  frame_num_ = 0u;
  clear_has_frame_num();
}
inline ::google::protobuf::uint32 DBCdynInfo::frame_num() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.DBCdynInfo.frame_num)
  return frame_num_;
}
inline void DBCdynInfo::set_frame_num(::google::protobuf::uint32 value) {
  set_has_frame_num();
  frame_num_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.DBCdynInfo.frame_num)
}

// repeated .dyncfg.pb.NAD_FrameInfo frames = 4;
inline int DBCdynInfo::frames_size() const {
  return frames_.size();
}
inline void DBCdynInfo::clear_frames() {
  frames_.Clear();
}
inline const ::dyncfg::pb::NAD_FrameInfo& DBCdynInfo::frames(int index) const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.DBCdynInfo.frames)
  return frames_.Get(index);
}
inline ::dyncfg::pb::NAD_FrameInfo* DBCdynInfo::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:dyncfg.pb.DBCdynInfo.frames)
  return frames_.Mutable(index);
}
inline ::dyncfg::pb::NAD_FrameInfo* DBCdynInfo::add_frames() {
  // @@protoc_insertion_point(field_add:dyncfg.pb.DBCdynInfo.frames)
  return frames_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::NAD_FrameInfo >&
DBCdynInfo::frames() const {
  // @@protoc_insertion_point(field_list:dyncfg.pb.DBCdynInfo.frames)
  return frames_;
}
inline ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::NAD_FrameInfo >*
DBCdynInfo::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:dyncfg.pb.DBCdynInfo.frames)
  return &frames_;
}

// -------------------------------------------------------------------

// NADUpLoadDictReq

// required .dyncfg.pb.DYN_ULOAD_ENUM_TYPE rsp_type = 1;
inline bool NADUpLoadDictReq::has_rsp_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NADUpLoadDictReq::set_has_rsp_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NADUpLoadDictReq::clear_has_rsp_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NADUpLoadDictReq::clear_rsp_type() {
  rsp_type_ = 0;
  clear_has_rsp_type();
}
inline ::dyncfg::pb::DYN_ULOAD_ENUM_TYPE NADUpLoadDictReq::rsp_type() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NADUpLoadDictReq.rsp_type)
  return static_cast< ::dyncfg::pb::DYN_ULOAD_ENUM_TYPE >(rsp_type_);
}
inline void NADUpLoadDictReq::set_rsp_type(::dyncfg::pb::DYN_ULOAD_ENUM_TYPE value) {
  assert(::dyncfg::pb::DYN_ULOAD_ENUM_TYPE_IsValid(value));
  set_has_rsp_type();
  rsp_type_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NADUpLoadDictReq.rsp_type)
}

// required string version = 2;
inline bool NADUpLoadDictReq::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NADUpLoadDictReq::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NADUpLoadDictReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NADUpLoadDictReq::clear_version() {
  if (version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_->clear();
  }
  clear_has_version();
}
inline const ::std::string& NADUpLoadDictReq::version() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NADUpLoadDictReq.version)
  return *version_;
}
inline void NADUpLoadDictReq::set_version(const ::std::string& value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(value);
  // @@protoc_insertion_point(field_set:dyncfg.pb.NADUpLoadDictReq.version)
}
inline void NADUpLoadDictReq::set_version(const char* value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(value);
  // @@protoc_insertion_point(field_set_char:dyncfg.pb.NADUpLoadDictReq.version)
}
inline void NADUpLoadDictReq::set_version(const char* value, size_t size) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dyncfg.pb.NADUpLoadDictReq.version)
}
inline ::std::string* NADUpLoadDictReq::mutable_version() {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dyncfg.pb.NADUpLoadDictReq.version)
  return version_;
}
inline ::std::string* NADUpLoadDictReq::release_version() {
  clear_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = version_;
    version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NADUpLoadDictReq::set_allocated_version(::std::string* version) {
  if (version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete version_;
  }
  if (version) {
    set_has_version();
    version_ = version;
  } else {
    clear_has_version();
    version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dyncfg.pb.NADUpLoadDictReq.version)
}

// required string vehicle_type = 3;
inline bool NADUpLoadDictReq::has_vehicle_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NADUpLoadDictReq::set_has_vehicle_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NADUpLoadDictReq::clear_has_vehicle_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NADUpLoadDictReq::clear_vehicle_type() {
  if (vehicle_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vehicle_type_->clear();
  }
  clear_has_vehicle_type();
}
inline const ::std::string& NADUpLoadDictReq::vehicle_type() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NADUpLoadDictReq.vehicle_type)
  return *vehicle_type_;
}
inline void NADUpLoadDictReq::set_vehicle_type(const ::std::string& value) {
  set_has_vehicle_type();
  if (vehicle_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vehicle_type_ = new ::std::string;
  }
  vehicle_type_->assign(value);
  // @@protoc_insertion_point(field_set:dyncfg.pb.NADUpLoadDictReq.vehicle_type)
}
inline void NADUpLoadDictReq::set_vehicle_type(const char* value) {
  set_has_vehicle_type();
  if (vehicle_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vehicle_type_ = new ::std::string;
  }
  vehicle_type_->assign(value);
  // @@protoc_insertion_point(field_set_char:dyncfg.pb.NADUpLoadDictReq.vehicle_type)
}
inline void NADUpLoadDictReq::set_vehicle_type(const char* value, size_t size) {
  set_has_vehicle_type();
  if (vehicle_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vehicle_type_ = new ::std::string;
  }
  vehicle_type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dyncfg.pb.NADUpLoadDictReq.vehicle_type)
}
inline ::std::string* NADUpLoadDictReq::mutable_vehicle_type() {
  set_has_vehicle_type();
  if (vehicle_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vehicle_type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dyncfg.pb.NADUpLoadDictReq.vehicle_type)
  return vehicle_type_;
}
inline ::std::string* NADUpLoadDictReq::release_vehicle_type() {
  clear_has_vehicle_type();
  if (vehicle_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = vehicle_type_;
    vehicle_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NADUpLoadDictReq::set_allocated_vehicle_type(::std::string* vehicle_type) {
  if (vehicle_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete vehicle_type_;
  }
  if (vehicle_type) {
    set_has_vehicle_type();
    vehicle_type_ = vehicle_type;
  } else {
    clear_has_vehicle_type();
    vehicle_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dyncfg.pb.NADUpLoadDictReq.vehicle_type)
}

// required uint32 time_stamp = 4;
inline bool NADUpLoadDictReq::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NADUpLoadDictReq::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NADUpLoadDictReq::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NADUpLoadDictReq::clear_time_stamp() {
  time_stamp_ = 0u;
  clear_has_time_stamp();
}
inline ::google::protobuf::uint32 NADUpLoadDictReq::time_stamp() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NADUpLoadDictReq.time_stamp)
  return time_stamp_;
}
inline void NADUpLoadDictReq::set_time_stamp(::google::protobuf::uint32 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NADUpLoadDictReq.time_stamp)
}

// required uint32 frame_num = 5;
inline bool NADUpLoadDictReq::has_frame_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NADUpLoadDictReq::set_has_frame_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NADUpLoadDictReq::clear_has_frame_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NADUpLoadDictReq::clear_frame_num() {
  frame_num_ = 0u;
  clear_has_frame_num();
}
inline ::google::protobuf::uint32 NADUpLoadDictReq::frame_num() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NADUpLoadDictReq.frame_num)
  return frame_num_;
}
inline void NADUpLoadDictReq::set_frame_num(::google::protobuf::uint32 value) {
  set_has_frame_num();
  frame_num_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NADUpLoadDictReq.frame_num)
}

// repeated uint32 data_sn = 6;
inline int NADUpLoadDictReq::data_sn_size() const {
  return data_sn_.size();
}
inline void NADUpLoadDictReq::clear_data_sn() {
  data_sn_.Clear();
}
inline ::google::protobuf::uint32 NADUpLoadDictReq::data_sn(int index) const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NADUpLoadDictReq.data_sn)
  return data_sn_.Get(index);
}
inline void NADUpLoadDictReq::set_data_sn(int index, ::google::protobuf::uint32 value) {
  data_sn_.Set(index, value);
  // @@protoc_insertion_point(field_set:dyncfg.pb.NADUpLoadDictReq.data_sn)
}
inline void NADUpLoadDictReq::add_data_sn(::google::protobuf::uint32 value) {
  data_sn_.Add(value);
  // @@protoc_insertion_point(field_add:dyncfg.pb.NADUpLoadDictReq.data_sn)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
NADUpLoadDictReq::data_sn() const {
  // @@protoc_insertion_point(field_list:dyncfg.pb.NADUpLoadDictReq.data_sn)
  return data_sn_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
NADUpLoadDictReq::mutable_data_sn() {
  // @@protoc_insertion_point(field_mutable_list:dyncfg.pb.NADUpLoadDictReq.data_sn)
  return &data_sn_;
}

// -------------------------------------------------------------------

// NADUpLoadDictRsp

// required uint32 errcode = 1;
inline bool NADUpLoadDictRsp::has_errcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NADUpLoadDictRsp::set_has_errcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NADUpLoadDictRsp::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NADUpLoadDictRsp::clear_errcode() {
  errcode_ = 0u;
  clear_has_errcode();
}
inline ::google::protobuf::uint32 NADUpLoadDictRsp::errcode() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NADUpLoadDictRsp.errcode)
  return errcode_;
}
inline void NADUpLoadDictRsp::set_errcode(::google::protobuf::uint32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NADUpLoadDictRsp.errcode)
}

// required uint32 time_stamp = 2;
inline bool NADUpLoadDictRsp::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NADUpLoadDictRsp::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NADUpLoadDictRsp::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NADUpLoadDictRsp::clear_time_stamp() {
  time_stamp_ = 0u;
  clear_has_time_stamp();
}
inline ::google::protobuf::uint32 NADUpLoadDictRsp::time_stamp() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NADUpLoadDictRsp.time_stamp)
  return time_stamp_;
}
inline void NADUpLoadDictRsp::set_time_stamp(::google::protobuf::uint32 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NADUpLoadDictRsp.time_stamp)
}

// -------------------------------------------------------------------

// NADDynInfoValReq

// required uint32 frame_num = 1;
inline bool NADDynInfoValReq::has_frame_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NADDynInfoValReq::set_has_frame_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NADDynInfoValReq::clear_has_frame_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NADDynInfoValReq::clear_frame_num() {
  frame_num_ = 0u;
  clear_has_frame_num();
}
inline ::google::protobuf::uint32 NADDynInfoValReq::frame_num() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NADDynInfoValReq.frame_num)
  return frame_num_;
}
inline void NADDynInfoValReq::set_frame_num(::google::protobuf::uint32 value) {
  set_has_frame_num();
  frame_num_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NADDynInfoValReq.frame_num)
}

// repeated .dyncfg.pb.NAD_FrameInfo frames = 2;
inline int NADDynInfoValReq::frames_size() const {
  return frames_.size();
}
inline void NADDynInfoValReq::clear_frames() {
  frames_.Clear();
}
inline const ::dyncfg::pb::NAD_FrameInfo& NADDynInfoValReq::frames(int index) const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NADDynInfoValReq.frames)
  return frames_.Get(index);
}
inline ::dyncfg::pb::NAD_FrameInfo* NADDynInfoValReq::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:dyncfg.pb.NADDynInfoValReq.frames)
  return frames_.Mutable(index);
}
inline ::dyncfg::pb::NAD_FrameInfo* NADDynInfoValReq::add_frames() {
  // @@protoc_insertion_point(field_add:dyncfg.pb.NADDynInfoValReq.frames)
  return frames_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::NAD_FrameInfo >&
NADDynInfoValReq::frames() const {
  // @@protoc_insertion_point(field_list:dyncfg.pb.NADDynInfoValReq.frames)
  return frames_;
}
inline ::google::protobuf::RepeatedPtrField< ::dyncfg::pb::NAD_FrameInfo >*
NADDynInfoValReq::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:dyncfg.pb.NADDynInfoValReq.frames)
  return &frames_;
}

// -------------------------------------------------------------------

// NADDynInfoValRsp

// required uint32 errcode = 1;
inline bool NADDynInfoValRsp::has_errcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NADDynInfoValRsp::set_has_errcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NADDynInfoValRsp::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NADDynInfoValRsp::clear_errcode() {
  errcode_ = 0u;
  clear_has_errcode();
}
inline ::google::protobuf::uint32 NADDynInfoValRsp::errcode() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NADDynInfoValRsp.errcode)
  return errcode_;
}
inline void NADDynInfoValRsp::set_errcode(::google::protobuf::uint32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NADDynInfoValRsp.errcode)
}

// required uint32 time_stamp = 2;
inline bool NADDynInfoValRsp::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NADDynInfoValRsp::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NADDynInfoValRsp::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NADDynInfoValRsp::clear_time_stamp() {
  time_stamp_ = 0u;
  clear_has_time_stamp();
}
inline ::google::protobuf::uint32 NADDynInfoValRsp::time_stamp() const {
  // @@protoc_insertion_point(field_get:dyncfg.pb.NADDynInfoValRsp.time_stamp)
  return time_stamp_;
}
inline void NADDynInfoValRsp::set_time_stamp(::google::protobuf::uint32 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:dyncfg.pb.NADDynInfoValRsp.time_stamp)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace dyncfg

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::dyncfg::pb::DYN_DATA_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::dyncfg::pb::DYN_DATA_TYPE>() {
  return ::dyncfg::pb::DYN_DATA_TYPE_descriptor();
}
template <> struct is_proto_enum< ::dyncfg::pb::DYN_ULOAD_ENUM_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::dyncfg::pb::DYN_ULOAD_ENUM_TYPE>() {
  return ::dyncfg::pb::DYN_ULOAD_ENUM_TYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cfg_5fprotocol_2eproto__INCLUDED
